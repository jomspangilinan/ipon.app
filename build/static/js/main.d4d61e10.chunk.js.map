{"version":3,"sources":["logo.svg","firebase.js","Login.js","SidebarData.js","Util.js","pages/History.js","Reports.js","pages/Overview.js","pages/Logout.js","Main.js","App.js","reportWebVitals.js","index.js"],"names":["app","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","db","firestore","signInWithEmailAndPassword","GoogleAuthProvider","email","password","a","console","error","alert","message","registerWithEmailAndPassword","name","createUserWithEmailAndPassword","res","user","collection","add","uid","authProvider","sendPasswordResetEmail","useStyles","makeStyles","theme","customBorderRadius","borderRadius","width","padding","margin","textAlign","alignItems","customTextBox","customBorderRadius_Over","backgroundColor","color","customTextBox_Over","textFieldLabel","textFieldLabelFocused","textFieldRoot","borderColor","textFieldFocused","textFieldNotchedOutline","createMuiTheme","typography","fontFamily","join","button","textTransform","palette","primary","Login","classes","React","checked","setChecked","handleChange","prev","useState","setEmail","setPassword","useAuthState","loading","setName","history","useHistory","useEffect","replace","forgot","setForgot","handleForgotClose","className","Grid","container","justify","direction","item","src","logo","alt","class","Fade","transitionDuration","in","ThemeProvider","Paper","variant","elevation","spacing","Link","href","onClick","TextField","id","label","onChange","e","target","value","type","Button","style","background","fontSize","Dialog","open","onClose","DialogTitle","DialogContent","DialogContentText","autoFocus","fullWidth","DialogActions","InputLabelProps","root","focused","InputProps","notchedOutline","border","SidebarData","title","path","icon","tool","eachExpense","expenses","Object","keys","map","key","sort","b","Date","date","currentUsersExpenses","currentUser","filter","elem","user_id","ExpensesInDate_","IncomeInDate_","expensesToday","getMonth","getDate","totalExpense","length","Number","parseFloat","price","reduce","cur","History","history_","setHistory_","fetchUserName","where","get","query","docs","data","database","ref","on","log","val","utils","thisUsersExpenses","height","rows","columns","field","headerName","pageSize","rowsPerPageOptions","checkboxSelection","Reports","overflow","allow","sandbox","fabStyle","position","bottom","right","bgcolor","Overview","transactionType_","setTransactionType_","transactionName_","setTransactionName_","price_","setPrice_","date_","setDate_","money_","setMoney_","test_array","setTest_array","expenseData_","setExpenseData_","dateFilter_","setDateFilter_","getDates","startDate","endDate","dates","currentDate","addDays","days","this","valueOf","setDate","push","call","toDateString","firstDay","getUTCFullYear","getUTCMonth","getUTCDate","lastDay","dates_exported","totalMoney","previousValue","currentValue","A","B","C","n","i","labels","datasets","fill","tension","borderWidth","hoverBackgroundColor","hoverBorderColor","toLocaleString","DateFnsUtils","format","newValue","first","last","dates_exported_1","renderInput","params","Fab","sx","FormControl","InputLabel","Select","labelId","autoWidth","event","MenuItem","blankArray","day","getDay","then","catch","Logout","signOut","drawerWidth","theme_prov","MiniDrawer","state","anchorEl","handleMenu","setState","currentTarget","handleClose","props","Boolean","CssBaseline","AppBar","appBar","fooJon","classNames","appBarShift","Toolbar","disableGutters","Typography","grow","noWrap","Drawer","drawerOpen","paper","toolbar","List","text","index","Tooltip","arrow","placement","ListItem","component","NavLink","to","ListItemIcon","ListItemText","content","exact","Component","withStyles","display","zIndex","drawer","marginLeft","transition","transitions","create","easing","sharp","duration","enteringScreen","menuButton","marginRight","menuButtonIconClosed","leavingScreen","transform","menuButtonIconOpen","hide","flexShrink","whiteSpace","drawerClose","overflowX","unit","breakpoints","up","marginTop","justifyContent","mixins","flexGrow","myComponent","paddingRight","withTheme","App","refreshPage","window","location","reload","Main","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d4d61e10.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.0c02ac70.svg\";","import firebase from 'firebase/compat/app';\r\nimport 'firebase/compat/auth';\r\nimport 'firebase/compat/database';\r\nimport 'firebase/compat/firestore';\r\nimport { useAuthState } from \"react-firebase-hooks/auth\";\r\n\r\n// // Import the functions you need from the SDKs you need\r\n// import { initializeApp } from \"firebase/app\";\r\n// import { getAnalytics } from \"firebase/analytics\";\r\n\r\n// TODO: Add SDKs for Firebase products that you want to use\r\n// https://firebase.google.com/docs/web/setup#available-libraries\r\n\r\n// Your web app's Firebase configuration\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyA4HI9Pe226EHYr1EU1gt___ojPAfFd4PM\",\r\n  authDomain: \"smartl-11d4c.firebaseapp.com\",\r\n  databaseURL: \"https://smartl-11d4c-default-rtdb.asia-southeast1.firebasedatabase.app\",\r\n  projectId: \"smartl-11d4c\",\r\n  storageBucket: \"smartl-11d4c.appspot.com\",\r\n  messagingSenderId: \"301086926501\",\r\n  appId: \"1:301086926501:web:8429d75cb8a36f6a3c4f4c\",\r\n  measurementId: \"G-MTMFKNLM0N\"\r\n};\r\n\r\n// Initialize Firebase\r\nconst app = firebase.initializeApp(firebaseConfig);\r\nconst auth = app.auth();\r\nconst db = app.firestore();\r\nconst googleProvider = new firebase.auth.GoogleAuthProvider();\r\n\r\n/*\r\n    Source: https://blog.logrocket.com/user-authentication-firebase-react-apps/\r\n */\r\nconst signInWithGoogle = async () => {\r\n  try {\r\n    const res = await auth.signInWithPopup(googleProvider);\r\n    const user = res.user;\r\n    const query = await db\r\n      .collection(\"users\")\r\n      .where(\"uid\", \"==\", user.uid)\r\n      .get();\r\n    if (query.docs.length === 0) {\r\n      await db.collection(\"users\").add({\r\n        uid: user.uid,\r\n        name: user.displayName,\r\n        authProvider: \"google\",\r\n        email: user.email,\r\n      });\r\n    }\r\n  } catch (err) {\r\n    console.error(err);\r\n    alert(err.message);\r\n  }\r\n};\r\n\r\n\r\nconst signInWithEmailAndPassword = async (email, password) => {\r\n  try {\r\n    await auth.signInWithEmailAndPassword(email, password);\r\n  } catch (err) {\r\n    console.error(err);\r\n    alert(err.message);\r\n  }\r\n};\r\n\r\nconst registerWithEmailAndPassword = async (name, email, password) => {\r\n  try {\r\n    const res = await auth.createUserWithEmailAndPassword(email, password);\r\n    const user = res.user;\r\n    await db.collection(\"users\").add({\r\n      uid: user.uid,\r\n      name,\r\n      authProvider: \"local\",\r\n      email,\r\n    });\r\n  } catch (err) {\r\n    console.error(err);\r\n    alert(err.message);\r\n  }\r\n};\r\n\r\nconst sendPasswordResetEmail = async (email) => {\r\n  try {\r\n    await auth.sendPasswordResetEmail(email);\r\n    alert(\"Password reset link sent!\");\r\n  } catch (err) {\r\n    console.error(err);\r\n    alert(err.message);\r\n  }\r\n};\r\n\r\nconst logout = () => {\r\n  auth.signOut();\r\n};\r\nconst CurrentUser = () => {\r\n    const [user, loading, error] = useAuthState(firebase.auth());\r\n  \r\n    return {user}\r\n  };\r\n\r\nexport {\r\n  app,\r\n  auth,\r\n  db,\r\n  signInWithGoogle,\r\n  CurrentUser,\r\n  signInWithEmailAndPassword,\r\n  registerWithEmailAndPassword,\r\n  sendPasswordResetEmail,\r\n  logout,\r\n};","import logo from './logo.svg';\nimport './Login.css';\nimport { createMuiTheme,ThemeProvider  } from '@material-ui/core/styles';\nimport * as React from \"react\";\nimport Fade  from \"@mui/material/Fade\";\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\n\n\nimport {\nButton,\nTextField,\nGrid,\nPaper,\nLink,\n} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { auth, signInWithEmailAndPassword,registerWithEmailAndPassword, signInWithGoogle,sendPasswordResetEmail } from \"./firebase\";\nimport { useAuthState } from \"react-firebase-hooks/auth\";\n\nconst useStyles = makeStyles((theme) => ({\n  customBorderRadius: {\n    borderRadius: 5,\n    width: '396px',\n    padding: '30px 0px 28px',\n    margin: '40% auto',\n    textAlign: 'center',\n    alignItems: 'center',\n  },\n  customTextBox:\n  {\n    width: '90%',\n  },\n  customBorderRadius_Over: {\n    borderRadius: 5,\n    width: '396px',\n    padding: '30px 0px 28px',\n    margin: '-117% auto',\n    textAlign: 'center',\n    alignItems: 'center',\n    backgroundColor: '#FBBD14',\n    color:'#FFF',\n  },\n  customTextBox_Over:\n  {\n    width: '90%',\n  },\n\n  textFieldLabel: {\n    // this will be applied when input focused (label color change)\n    '&$textFieldLabelFocused': {\n      color: 'white',\n    },\n  },\n  textFieldLabelFocused: {},\n  textFieldRoot: {\n    // this will be applied when hovered (input text color change)\n    '&:hover': {\n      color: 'white',\n    },\n    // this will applied when hovered (input border color change)\n    '&:hover $textFieldNotchedOutline': {\n      borderColor: 'white',\n    },\n    // this will be applied when focused (input border color change)\n    '&$textFieldFocused $textFieldNotchedOutline': {\n      borderColor: 'white',\n    },\n  },\n  textFieldFocused: {},\n  textFieldNotchedOutline: {},\n\n}));\n\nconst theme = createMuiTheme({\n  \n  typography: {\n    fontFamily: ['\"Montserrat Medium\"'].join(','),\n    button:\n    {\n      textTransform: 'none',\n      width:'90%',\n      palette:\n      {\n        primary: '#FBBD14'\n      }\n    },\n   },\n },\n)\n\n\nfunction Login() {\n  const classes = useStyles();\n  const [checked, setChecked] = React.useState(false);\n\n  const handleChange = () => {\n    setChecked((prev) => !prev);\n  };\n\n\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [user, loading, error] = useAuthState(auth);\n  const [name, setName] = useState(\"\");\n  \n  const history = useHistory();\n\n  \n  const register = () => {\n    if (!name) alert(\"Please enter name\");\n    registerWithEmailAndPassword(name, email, password);\n  };\n  useEffect(() => {\n    if (loading) return;\n    if (user) history.replace(\"/dashboard\");\n  }, [user, loading,history]);\n  const [forgot, setForgot] = React.useState(false);\n\n  const handleForgotOpen = () => {\n    setForgot(true);\n  };\n\n  const handleForgotClose = () => {\n    setForgot(false);\n  };\n  \n  return (\n    <div className=\"main\">\n      <Grid container justify=\"center\" direction=\"row\" className=\"login-form\">\n      <Grid item>\n          <Grid container justify=\"center\" direction=\"column\" className=\"logo-comp\">\n            <Grid item>\n              <img src={logo} className=\"App-logo-login\" alt=\"logo\" />\n            </Grid>\n            <Grid item>\n              <h1 class=\"large\">\n              ipon.app\n              </h1>\n            </Grid>\n            <Grid item>\n            <p class=\"tag-large\">\n            Simplest way to track your expenses.\n            </p>\n            </Grid>\n            \n            <Grid item>\n            <p class=\"tag-next-large\">\n              Because every peso counts.\n            </p>\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid item>\n        <Fade  transitionDuration={ 1000 } in={!checked}>\n        <div className=\"loob\">\n        <ThemeProvider theme={theme}>\n          <Paper variant=\"elevation\" elevation={10} className={classes.customBorderRadius}>\n          <Grid container direction=\"row\" spacing={0} className=\"test\">\n          <Grid item>\n            <div className=\"sign\">\n                Don't have an account yet? </div>\n                </Grid>\n                <Grid item>\n              <Link href=\"#\" onClick={handleChange}>\n              <div  className=\"sign-link\">\n              Sign Up!\n              </div>\n              </Link>\n                </Grid>\n            </Grid>\n            <Grid container direction=\"column\" spacing={2} >\n              \n              <Grid item>\n                <TextField\n                  id=\"outlined-email\"\n                  label=\"Email\"\n                  variant=\"outlined\"\n                  className = {classes.customTextBox}\n                  onChange={(e) => setEmail(e.target.value)}\n                  // inputProps={{style: {fontSize: 40}}} // font size of input text\n                  // InputLabelProps={{style: {fontSize: 40}}} // font size of input label\n                />\n              </Grid>\n              <Grid item>\n                <TextField\n                  id=\"outlined-pw\"\n                  label=\"Password\"\n                  type=\"password\"\n                  variant=\"outlined\"\n                  className = {classes.customTextBox}\n                  onChange={(e) => setPassword(e.target.value)}\n                />\n              </Grid>\n              <Grid item>\n              <Button\n              variant=\"contained\"              \n              type=\"submit\"\n              className=\"button-block\"\n              style = {{background: '#FBBD14',\n                        color:'#FFFFFF',\n                        fontFamily:'Montserrat SemiBold',\n                        fontSize: '16px'}}\n              onClick={() => signInWithEmailAndPassword(email, password)}\n              >Login</Button>\n\n              </Grid>\n              <Grid item>\n              <Link onClick={handleForgotOpen} className=\"fpw\">\n              Forgot Password?\n              </Link>\n\n              <Dialog open={forgot} onClose={handleForgotClose}>\n                <DialogTitle>Forgot Password</DialogTitle>\n                  <DialogContent>\n                    <DialogContentText>\n                        Submit the email you signed up with to reset your password.\n                    </DialogContentText>\n                    <TextField\n                      autoFocus\n                      margin=\"dense\"\n                      id=\"name\"\n                      label=\"Email Address\"\n                      type=\"email\"\n                      fullWidth\n                      variant=\"standard\"\n                      onChange={(e) => setEmail(e.target.value)}\n                    />\n                  </DialogContent>\n                    <DialogActions>\n                      <Button onClick={handleForgotClose}>Close</Button>\n                      <Button onClick={() => sendPasswordResetEmail(email)}>Reset Password</Button>\n                    </DialogActions>\n                </Dialog>\n              </Grid>\n            </Grid>\n          </Paper>\n          </ThemeProvider>\n          </div>\n          </Fade>\n          <Fade in={checked}>\n          <div className=\"loob\">\n        <ThemeProvider theme={theme}>\n          <Paper variant=\"elevation\" elevation={10} className={classes.customBorderRadius_Over}>\n          <Grid container direction=\"row\" spacing={0} className=\"test-reg\">\n          <Grid item>\n            <div className=\"reg\">\n                Already have an account? </div>\n                </Grid>\n                <Grid item>\n              <Link onClick={handleChange}>\n              <div  className=\"reg-link\">\n              Sign In!\n              </div>\n              </Link>\n                </Grid>\n            </Grid>\n            <Grid container direction=\"column\" spacing={2} >\n              \n              <Grid item>\n                <TextField\n                  id=\"outlined-name\"\n                  label=\"Name\"\n                  variant=\"outlined\"\n                  className = {classes.customTextBox_Over}\n                   //inputProps={{style: {backgroundColor: 'white'}}} // font size of input text\n                   //InputLabelProps={{style: {backgroundColor: 'white'}}} // font size of input label\n                   InputLabelProps={{\n                    classes: {\n                      root: classes.textFieldLabel,\n                      focused: classes.textFieldLabelFocused,\n                    },\n                  }}\n                  InputProps={{\n                    classes: {\n                      root: classes.textFieldRoot,\n                      focused: classes.textFieldFocused,\n                      notchedOutline: classes.textFieldNotchedOutline,\n                    },\n                  }}\n                  onChange={(e) => setName(e.target.value)}\n                />\n              </Grid>\n              <Grid item>\n                <TextField\n                  id=\"outlined-email\"\n                  label=\"Email\"\n                  variant=\"outlined\"\n                  className = {classes.customTextBox_Over}\n                  InputLabelProps={{\n                    classes: {\n                      root: classes.textFieldLabel,\n                      focused: classes.textFieldLabelFocused,\n                    },\n                  }}\n                  InputProps={{\n                    classes: {\n                      root: classes.textFieldRoot,\n                      focused: classes.textFieldFocused,\n                      notchedOutline: classes.textFieldNotchedOutline,\n                    },\n                  }}\n                  onChange={(e) => setEmail(e.target.value)}\n                />\n              </Grid>\n              <Grid item>\n                <TextField\n                  id=\"outlined-pw\"\n                  label=\"Password\"\n                  type=\"password\"\n                  variant=\"outlined\"\n                  className = {classes.customTextBox_Over}\n                  InputLabelProps={{\n                    classes: {\n                      root: classes.textFieldLabel,\n                      focused: classes.textFieldLabelFocused,\n                    },\n                  }}\n                  InputProps={{\n                    classes: {\n                      root: classes.textFieldRoot,\n                      focused: classes.textFieldFocused,\n                      notchedOutline: classes.textFieldNotchedOutline,\n                    },\n                  }}\n                  onChange={(e) => setPassword(e.target.value)}\n                />\n              </Grid>\n              <Grid item>\n              <Button\n              variant=\"outlined\"              \n              type=\"submit\"\n              className=\"button-block\"\n              style = {{background: '#FBBD14',\n                        border: 'solid 1px #FFF',\n                        color: '#FFF',\n                        fontFamily:'Montserrat SemiBold',\n                        fontSize: '16px'}}\n                onClick={register}\n              >\n                Sign Up\n              </Button>\n\n              </Grid>\n            </Grid>\n          </Paper>\n          </ThemeProvider>\n          </div>\n            </Fade>\n        </Grid>\n      </Grid>\n  </div>\n  );\n}\n\nexport default Login;\n","import React from 'react';\r\nimport DashboardIcon from \"@material-ui/icons/Dashboard\";\r\nimport AccountBalanceWalletIcon from \"@material-ui/icons/AccountBalance\"\r\nimport PaymentIcon from '@material-ui/icons/Payment';\r\nimport MonetizationOnIcon from '@material-ui/icons/MonetizationOn';\r\nimport LogoutIcon from '@mui/icons-material/Logout';\r\nexport const SidebarData = [\r\n  {\r\n    title: 'Overview',\r\n    path: '/dashboard',\r\n    icon: <DashboardIcon/>,\r\n    tool: 'Overview charts, adding transaction',\r\n    // cName: 'nav-text'\r\n  },\r\n  {\r\n    title: 'History',\r\n    path: '/history',\r\n    icon: <AccountBalanceWalletIcon/>,\r\n    tool: 'Transaction History',\r\n    // cName: 'nav-text'\r\n  },\r\n  // {\r\n  //   title: 'Payments',\r\n  //   path: '/payables',\r\n  //   icon: <PaymentIcon/>,\r\n  //   tool: 'Test tool tip',\r\n  //   // cName: 'nav-text'\r\n  // },\r\n  // {\r\n  //   title: 'Currency',\r\n  //   path: '/currency',\r\n  //   icon: <MonetizationOnIcon/>,\r\n  //   tool: 'Test tool tip',\r\n  //   //cName: 'nav-text'\r\n  // },\r\n  {\r\n    title: 'Logout',\r\n    path: '/logout',\r\n    icon: <LogoutIcon/>,\r\n    tool: 'Account logout',\r\n    //cName: 'nav-text'\r\n  }\r\n];","import moment from \"moment\";\r\n\r\nexport const eachExpense = expenses => {\r\n    return Object.keys(expenses)\r\n        .map(function (key) {\r\n            return { key: key, value: expenses[key] };\r\n        })\r\n        .sort(function (a, b) {\r\n            // Turn your strings into dates, and then subtract them\r\n            // to get a value that is either negative, positive, or zero.\r\n            return new Date(b.value.date) - new Date(a.value.date);\r\n        });\r\n};\r\n\r\nexport const currentUsersExpenses = (eachExpense, currentUser) => {\r\n    return eachExpense.filter(elem => elem.value.user_id === currentUser.uid);\r\n};\r\n\r\n// expenses in selected month and year\r\nexport const expensesinMonthAndYear = (eachExpense, currentUser, selectedMonth, selectedYear) => {\r\n    return eachExpense\r\n        .filter(elem => elem.value.uid === currentUser.uid)\r\n        .filter(elem => new Date(elem.value.date).getFullYear().toString() === selectedYear.toString())\r\n        .filter(elem => new Date(elem.value.date).getMonth().toString() === selectedMonth);\r\n};\r\n\r\n// expenses in selected year\r\nexport const expensesinSelectedYear = (eachExpense, currentUser, selectedYear) => {\r\n    return eachExpense\r\n        .filter(elem => elem.value.uid === currentUser.uid)\r\n        .filter(elem => new Date(elem.value.date).getFullYear().toString() === selectedYear.toString());\r\n};\r\n\r\n// expenses in a selected date\r\nexport const expensesInDate = (eachExpense, currentUser, date) => {\r\n    return eachExpense.filter(elem => elem.value.user_id === currentUser.uid && elem.value.date === date);\r\n};\r\n\r\nexport const ExpensesInDate_ = (eachExpense, currentUser, date) => {\r\n    return eachExpense.filter(elem => elem.value.user_id === currentUser.uid && elem.value.date === date && elem.value.type ==='expense');\r\n};\r\n\r\nexport const IncomeInDate_ = (eachExpense, currentUser, date) => {\r\n    return eachExpense.filter(elem => elem.value.user_id === currentUser.uid && elem.value.date === date && elem.value.type ==='income');\r\n};\r\n\r\n\r\n// expenses in current month\r\nexport const currentMonthExpenses = (eachExpense, currentUser) => {\r\n    return eachExpense.filter(\r\n        elem =>\r\n            elem.value.uid === currentUser.uid &&\r\n            new Date(elem.value.date).getMonth() === new Date().getMonth() &&\r\n            new Date(elem.value.date).getFullYear() === new Date().getFullYear()\r\n    );\r\n};\r\n\r\n// expense in current year\r\nexport const expensesinCurrentYear = (eachExpense, currentUser) => {\r\n    return eachExpense\r\n        .filter(elem => elem.value.uid === currentUser.uid)\r\n        .filter(elem => new Date(elem.value.date).getFullYear().toString() === new Date().getFullYear().toString());\r\n};\r\n\r\n// expenses in a particular month of this year\r\nexport const expensesinMonth = (eachExpense, currentUser, MonthNumber, selectedYear) => {\r\n    return eachExpense\r\n        .filter(elem => elem.value.uid === currentUser.uid)\r\n        .filter(elem => new Date(elem.value.date).getFullYear().toString() === selectedYear.toString())\r\n        .filter(elem => new Date(elem.value.date).getMonth().toString() === MonthNumber);\r\n};\r\n\r\n// expense today\r\nexport const expensesToday = (eachExpense, currentUser) => {\r\n    return eachExpense\r\n        .filter(\r\n            elem => elem.value.user_id === currentUser.uid && new Date(elem.value.date).getMonth() === new Date().getMonth()\r\n        )\r\n        .filter(elem => new Date(elem.value.date).getDate() === new Date().getDate());\r\n};\r\n\r\n// expense this week\r\nexport const expensesThisWeek = (eachExpense, currentUser) => {\r\n    return eachExpense.filter(\r\n        elem =>\r\n            elem.value.uid === currentUser.uid &&\r\n            moment(elem.value.date, \"MM/DD/YYYY\").week() === moment(moment(new Date()), \"MM/DD/YYYY\").week() &&\r\n            moment(elem.value.date, \"MM/DD/YYYY\").year() === moment(moment(new Date()), \"MM/DD/YYYY\").year()\r\n    );\r\n};\r\n\r\n// expenses Total\r\nexport const totalExpense = expenses => {\r\n    if (expenses.length) {\r\n        let totalMoney = 0;\r\n        return (expenses.map(elem => Number(\r\n            elem.value.type === 'income' ? \r\n                    parseFloat(elem.value.price) + totalMoney\r\n                    : totalMoney - parseFloat(elem.value.price)\r\n            )).reduce((prev, cur) => prev + cur)\r\n        \r\n        );\r\n    } else {\r\n        return 0;\r\n    }\r\n};\r\n\r\n// most spend day\r\nexport const mostSpentDay = expenses => {\r\n    let monday = 0;\r\n    let tuesday = 0;\r\n    let wednesday = 0;\r\n    let thursday = 0;\r\n    let friday = 0;\r\n    let saturday = 0;\r\n    let sunday = 0;\r\n\r\n    expenses.map(elem => {\r\n        switch (elem.value.day.toString()) {\r\n            case \"0\":\r\n                sunday = sunday + 1;\r\n                return \"\";\r\n            case \"1\":\r\n                monday = monday + 1;\r\n                return \"\";\r\n            case \"2\":\r\n                tuesday = tuesday + 1;\r\n                return \"\";\r\n            case \"3\":\r\n                wednesday = wednesday + 1;\r\n                return \"\";\r\n            case \"4\":\r\n                thursday = thursday + 1;\r\n                return \"\";\r\n            case \"5\":\r\n                friday = friday + 1;\r\n                return \"\";\r\n            case \"6\":\r\n                saturday = saturday + 1;\r\n                return \"\";\r\n            default:\r\n                return \"\";\r\n        }\r\n    });\r\n\r\n    let mostDaysObj = {\r\n        sunday: sunday,\r\n        monday: monday,\r\n        tuesday: tuesday,\r\n        wednesday: wednesday,\r\n        thursday: thursday,\r\n        friday: friday,\r\n        saturday: saturday\r\n    };\r\n\r\n    var sortable = [];\r\n    for (var day in mostDaysObj) {\r\n        sortable.push([day, mostDaysObj[day]]);\r\n    }\r\n\r\n    let sortedCategories = sortable.sort(function (a, b) {\r\n        return b[1] - a[1];\r\n    });\r\n\r\n    return {\r\n        mostSpentDay: expenses.length ? sortedCategories[0][0] : \"-\",\r\n        leastSpentDay: expenses.length ? sortedCategories[6][0] : \"-\"\r\n    };\r\n};\r\n\r\n// Total expenses in Each month\r\nexport const totalExpensesInEachMonthOfThisYear = (expenses, eachExpense, currentUser, selectedYear) => {\r\n    let expensesOfAllMonthsInThisYear = [];\r\n\r\n    for (var i = 0; i <= 11; i++) {\r\n        expensesOfAllMonthsInThisYear.push(\r\n            totalExpense(expensesinMonth(eachExpense, currentUser, String(i), selectedYear))\r\n        );\r\n    }\r\n    return expensesOfAllMonthsInThisYear;\r\n};\r\n\r\n// Total for each category\r\nexport const calculateTotalForAllCategories = expenses => {\r\n    const categories = [\r\n        \"Food\",\r\n        \"Automobile\",\r\n        \"Entertainment\",\r\n        \"Clothing\",\r\n        \"Healthcare\",\r\n        \"Travel\",\r\n        \"Shopping\",\r\n        \"Personal Care\",\r\n        \"Investment\",\r\n        \"Gifts & Donations\",\r\n        \"Bills & Utilities\",\r\n        \"Others\"\r\n    ];\r\n\r\n    let categoryTotal = {\r\n        Food: 0,\r\n        Automobile: 0,\r\n        Entertainment: 0,\r\n        Clothing: 0,\r\n        Healthcare: 0,\r\n        Travel: 0,\r\n        Shopping: 0,\r\n        \"Personal Care\": 0,\r\n        Investment: 0,\r\n        \"Gifts & Donations\": 0,\r\n        \"Bills & Utilities\": 0,\r\n        Others: 0\r\n    };\r\n\r\n    const totalForACategory = function (expenses, category) {\r\n        let temp = expenses.filter(elem => elem.value.category === category).map(el => Number(el.value.expense));\r\n\r\n        var category = category;\r\n        if (temp.length) {\r\n            return (categoryTotal[category] = temp.reduce((prev, cur) => prev + cur));\r\n        } else {\r\n            return (categoryTotal[category] = 0);\r\n        }\r\n    };\r\n\r\n    categories.map(category => totalForACategory(expenses, category));\r\n\r\n    console.log(\"category total\", categoryTotal)\r\n\r\n    return categoryTotal;\r\n};\r\n\r\n// most spent on category\r\nexport const mostSpentCategory = expenses => {\r\n    let categoryTotals = calculateTotalForAllCategories(expenses);\r\n\r\n    var sortable = [];\r\n    for (var cat in categoryTotals) {\r\n        sortable.push([cat, categoryTotals[cat]]);\r\n    }\r\n\r\n    let sortedCategories = sortable.sort(function (a, b) {\r\n        return b[1] - a[1];\r\n    });\r\n\r\n    return expenses.length ? sortedCategories[0][0] : \"-\";\r\n};\r\n\r\n// all categories\r\nexport const categories = [\r\n    \"Food\",\r\n    \"Automobile\",\r\n    \"Entertainment\",\r\n    \"Clothing\",\r\n    \"Healthcare\",\r\n    \"Travel\",\r\n    \"Shopping\",\r\n    \"Personal Care\",\r\n    \"Investment\",\r\n    \"Gifts & Donations\",\r\n    \"Bills & Utilities\",\r\n    \"Others\"\r\n];\r\n\r\n// colors for each category\r\nexport const categoryColors = [\r\n    \"#FF965D\",\r\n    \"#FFCC78\",\r\n    \"#A08E78\",\r\n    \"#8DA685\",\r\n    \"#00A3EA\",\r\n    \"#3EA75E\",\r\n    \"#16B498\",\r\n    \"#FF1945\",\r\n    \"#FF5473\",\r\n    \"#927959\",\r\n    \"#7E0332\",\r\n    \"#872AEF\"\r\n];\r\n\r\n// retrun border color for each category - daily and monthly view\r\n/*\r\n@method : categoryName\r\n@params : \r\n    cat: category name\r\n    name: name of the component (Basically we're retrieving styles based on category here)\r\n@return : styles based on category for a particular component based on name \r\n*/\r\nexport const categoryName = (cat, name) => {\r\n    switch (cat) {\r\n        case \"Food\":\r\n            return name === \"card\" ? { borderBottom: \"5px solid #FF965D\" } : { borderLeft: \"10px solid #FF965D\" };\r\n        case \"Automobile\":\r\n            return name === \"card\" ? { borderBottom: \"5px solid #FFCC78\" } : { borderLeft: \"10px solid #FFCC78\" };\r\n        case \"Entertainment\":\r\n            return name === \"card\" ? { borderBottom: \"5px solid #A08E78\" } : { borderLeft: \"10px solid #A08E78\" };\r\n        case \"Clothing\":\r\n            return name === \"card\" ? { borderBottom: \"5px solid #8DA685\" } : { borderLeft: \"10px solid #8DA685\" };\r\n        case \"Healthcare\":\r\n            return name === \"card\" ? { borderBottom: \"5px solid #00A3EA\" } : { borderLeft: \"10px solid #00A3EA\" };\r\n        case \"Travel\":\r\n            return name === \"card\" ? { borderBottom: \"5px solid #3EA75E\" } : { borderLeft: \"10px solid #3EA75E\" };\r\n        case \"Shopping\":\r\n            return name === \"card\" ? { borderBottom: \"5px solid #16B498\" } : { borderLeft: \"10px solid #16B498\" };\r\n        case \"Personal Care\":\r\n            return name === \"card\" ? { borderBottom: \"5px solid #FF1945\" } : { borderLeft: \"10px solid #FF1945\" };\r\n        case \"Investment\":\r\n            return name === \"card\" ? { borderBottom: \"5px solid #FF5473\" } : { borderLeft: \"10px solid #FF5473\" };\r\n        case \"Gifts & Donations\":\r\n            return name === \"card\" ? { borderBottom: \"5px solid #927959\" } : { borderLeft: \"10px solid #927959\" };\r\n        case \"Bills & Utilities\":\r\n            return name === \"card\" ? { borderBottom: \"5px solid #7E0332\" } : { borderLeft: \"10px solid #7E0332\" };\r\n        case \"Others\":\r\n            return name === \"card\" ? { borderBottom: \"5px solid #872AEF\" } : { borderLeft: \"10px solid #872AEF\" };\r\n        default:\r\n            return { borderBottom: \"5px solid orange\" };\r\n    }\r\n};\r\n\r\nexport const categoryIcon = category => {\r\n    switch (category) {\r\n        case \"Food\":\r\n            return \"cutlery\";\r\n        case \"Automobile\":\r\n            return \"motorcycle\";\r\n        case \"Entertainment\":\r\n            return \"film\";\r\n        case \"Clothing\":\r\n            return \"shopping-bag\";\r\n        case \"Healthcare\":\r\n            return \"medkit\";\r\n        case \"Travel\":\r\n            return \"plane\";\r\n        case \"Shopping\":\r\n            return \"shopping-cart\";\r\n        case \"Personal Care\":\r\n            return \"user-md\";\r\n        case \"Investment\":\r\n            return \"get-pocket\";\r\n        case \"Gifts & Donations\":\r\n            return \"gift\";\r\n        case \"Bills & Utilities\":\r\n            return \"columns\";\r\n        case \"Others\":\r\n            return \"circle-o\";\r\n        default:\r\n            return \"bars\";\r\n    }\r\n};\r\n\r\nexport const getCatColor = category => {\r\n    switch (category) {\r\n        case \"Food\":\r\n            return \"#FF965D\";\r\n        case \"Automobile\":\r\n            return \"#FFCC78\";\r\n        case \"Entertainment\":\r\n            return \"#A08E78\";\r\n        case \"Clothing\":\r\n            return \"#8DA685\";\r\n        case \"Healthcare\":\r\n            return \"#00A3EA\";\r\n        case \"Travel\":\r\n            return \"#3EA75E\";\r\n        case \"Shopping\":\r\n            return \"#16B498\";\r\n        case \"Personal Care\":\r\n            return \"#FF1945\";\r\n        case \"Investment\":\r\n            return \"#FF5473\";\r\n        case \"Gifts & Donations\":\r\n            return \"#927959\";\r\n        case \"Bills & Utilities\":\r\n            return \"#7E0332\";\r\n        case \"Others\":\r\n            return \"#872AEF\";\r\n        default:\r\n            return \"#fff\";\r\n    }\r\n};\r\n\r\nexport const setCurrencyIcon = currency => {\r\n    switch (currency) {\r\n        case \"Indian Rupees\":\r\n            return \"fa-rupee\";\r\n        case \"US Dollars\":\r\n            return \"fa-dollar\";\r\n        case \"Pounds\":\r\n            return \"fa-gbp\";\r\n        case \"Yen\":\r\n            return \"fa-yen\";\r\n        case \"Euro\":\r\n            return \"fa-euro\";\r\n        default:\r\n            return \"fa-rupee\";\r\n    }\r\n};\r\n\r\nexport const filterExpensesByCriteria = (startDate, endDate, category, expenseFrom, expenseTo, thisUsersExpenses) => {\r\n    var start = new Date(startDate);\r\n    var end = new Date(endDate);\r\n    var currentDate = new Date(start);\r\n    var between = [];\r\n    var filteredExpenses = [];\r\n\r\n    while (currentDate <= end) {\r\n        between.push(moment(new Date(currentDate)).format(\"MM/DD/YYYY\"));\r\n        currentDate.setDate(currentDate.getDate() + 1);\r\n    }\r\n\r\n    between.forEach(function (elem) {\r\n        return thisUsersExpenses.filter(function (el) {\r\n            return elem === el.value.date ? filteredExpenses.push(el) : \"\";\r\n        });\r\n    });\r\n\r\n    filteredExpenses = filteredExpenses\r\n        .filter(elem => {\r\n            return elem.value.category === category;\r\n        })\r\n        .filter(elem => {\r\n            return Number(elem.value.expense) >= Number(expenseFrom) && Number(elem.value.expense) <= Number(expenseTo);\r\n        });\r\n\r\n    return filteredExpenses;\r\n};\r\n\r\n// Total loan amount that you need to pay or get paid\r\nexport const loanTakenOrGivenAmt = (thisUsersLoans, takenOrGiven) => {\r\n    if (thisUsersLoans.length && takenOrGiven) {\r\n        let loans = thisUsersLoans.filter(\r\n            elem => elem.value.loanType === takenOrGiven && elem.value.status === \"Pending\"\r\n        );\r\n\r\n        return loans.length ? loans.map(elem => Number(elem.value.amount)).reduce((prev, cur) => prev + cur) : 0;\r\n    } else {\r\n        return 0;\r\n    }\r\n};\r\n\r\n// get all the dates of a particular week\r\n/*const today = moment();\r\n        const sevenDaysBefore = moment().subtract(7, 'days');\r\n        console.log(today)\r\n        console.log(sevenDaysBefore)*/\r\n\r\n\r\n// get all the dates of a particular monthly\r\n\r\nexport const getAllTheDatesInAMonth = (selectedYear, selectedMonth) => {\r\n    //var date = new Date(), y = date.getFullYear(), m = date.getMonth();\r\n    var firstDay = new Date(Number(selectedYear), Number(selectedMonth), 1);\r\n    var lastDay = new Date(Number(selectedYear), Number(selectedMonth) + 1, 0);\r\n\r\n    firstDay = moment(firstDay).format(\"MM/DD/YYYY\");\r\n    lastDay = moment(lastDay).format(\"MM/DD/YYYY\");\r\n\r\n    // Returns an array of dates between the two dates\r\n    var getDates = function (startDate, endDate) {\r\n        var dates = [],\r\n            currentDate = startDate,\r\n            addDays = function (days) {\r\n                var date = new Date(this.valueOf());\r\n                date.setDate(date.getDate() + days);\r\n                return date;\r\n            };\r\n        while (currentDate <= endDate) {\r\n            dates.push(currentDate);\r\n            currentDate = addDays.call(currentDate, 1);\r\n        }\r\n        return dates.map(date => moment(date).format(\"MM/DD/YYYY\"));\r\n    };\r\n\r\n    // Usage\r\n    var dates = getDates(new Date(firstDay), new Date(lastDay));\r\n    //var datesinSelectedMonth = [];\r\n    //dates.map(function (date) {\r\n    //datesinSelectedMonth.push(moment(date).format(\"MM/DD/YYYY\"));\r\n    //});\r\n\r\n    return dates;\r\n};\r\n\r\n// previous 3 and next 3 years\r\nexport const yearsGenereator = () => {\r\n    var defaultYears = [];\r\n    var dateVal = new Date();\r\n    var currentYear = dateVal.getFullYear();\r\n    var cutOffYears = 4; // using 5 years as cutoff as per reports cutoffyears to keep inline\r\n    for (var i = currentYear - cutOffYears; i <= currentYear + cutOffYears; i++) {\r\n        defaultYears.push(i);\r\n    }\r\n\r\n    return defaultYears;\r\n};\r\n","import React, { Component, useState, useEffect } from \"react\";\r\nimport { useAuthState } from \"react-firebase-hooks/auth\";\r\nimport { useHistory } from \"react-router\";\r\nimport { auth, db,app,CurrentUser } from \"../firebase\";\r\nimport * as utils from \"../Util\";\r\nimport Transaction from './Transaction';\r\nimport { DataGrid } from \"@mui/x-data-grid\";\r\n\r\n\r\nfunction History() {\r\n    const [user, loading, error] = useAuthState(auth);\r\n    const [history_, setHistory_] = useState([]);\r\n    const history = useHistory();\r\n    const columns = [\r\n        { field: 'id', headerName: 'ID', width: 70 },\r\n        { field: 'name', headerName: 'Transaction Name', width: 200 },\r\n        { field: 'price', headerName: 'Price', width: 150 },\r\n        {\r\n          field: 'date',\r\n          headerName: 'Date',\r\n          width: 200,\r\n        },\r\n        { field: 'type', headerName: 'Type', width: 150 },\r\n        \r\n      ];\r\n      \r\n    useEffect(() => {\r\n    \r\n        const fetchUserName = async () => {\r\n          try {\r\n            const query = await db\r\n              .collection(\"users\")\r\n              .where(\"uid\", \"==\", user?.uid)\r\n              .get();\r\n            const data = await query.docs[0].data();\r\n            \r\n            \r\n          } catch (err) {\r\n            console.error(err);\r\n            alert(\"An error occured while fetching user data\");\r\n          }\r\n        };\r\n        if (loading) return;\r\n        if (!user) return history.replace(\"/\");\r\n        \r\n\r\n        app.database().ref('Transactions/' + user?.uid).on(\"value\", data => {\r\n            console.log(data.val());\r\n            if(data.val() !== null)\r\n            {\r\n            const eachExpense = utils.eachExpense(data.val());\r\n            const thisUsersExpenses = utils.currentUsersExpenses(eachExpense, user);\r\n            \r\n            setHistory_(thisUsersExpenses);\r\n            \r\n           }\r\n          });\r\n\r\n        fetchUserName();\r\n      }, [user, loading,\r\n        history]);\r\n\r\n        \r\n  return (\r\n    //     <div className=\"latestTransactions\">\r\n    //     <p>Latest Transactions</p>\r\n    //     <ul>\r\n    //         {\r\n                \r\n    //             Object.keys(history_).map((id) => (\r\n    //                 <Transaction key={id}\r\n    //                     type={history_[id].value.type}\r\n    //                     name={history_[id].value.name}\r\n    //                     price={history_[id].value.price}\r\n    //                 />\r\n    //             ))\r\n    //         }\r\n    //     </ul>\r\n    // </div>\r\n    <div style={{ height: 400, width: '100%' }}>\r\n      <DataGrid\r\n        rows={\r\n            [Object.keys(history_).map((id) => (\r\n              {\r\n                  id: id,\r\n                  name: history_[id].value.name,\r\n                  price: history_[id].value.type === 'income' ?  +1 * parseFloat(history_[id].value.price) : -1 * parseFloat(history_[id].value.price),\r\n                  date: history_[id].value.date,\r\n                  type: history_[id].value.type,\r\n              }\r\n          ))][0]\r\n        }\r\n        columns={columns}\r\n        pageSize={5}\r\n        rowsPerPageOptions={[100]}\r\n        checkboxSelection\r\n      />\r\n      \r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default History;","import React from 'react';\r\n\r\nfunction Reports() {\r\n  \r\n  return (\r\n    <div className='reports'>\r\n      <iframe src=\"https://codesandbox.io/embed/n19y12zj  ?autoresize=1&fontsize=14&hidenavigation=1&theme=dark&view=preview\"\r\n     style={{width:'50%', height:'700px', border:0, borderRadius: '4px', overflow:'hidden'}}\r\n     title=\"React Calculator\"\r\n     allow=\"accelerometer; ambient-light-sensor; camera; encrypted-media; geolocation; gyroscope; hid; microphone; midi; payment; usb; vr; xr-spatial-tracking\"\r\n     sandbox=\"allow-forms allow-modals allow-popups allow-presentation allow-same-origin allow-scripts\"\r\n   ></iframe>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Reports;","import React, { Component, useState, useEffect } from \"react\";\r\nimport { useAuthState } from \"react-firebase-hooks/auth\";\r\nimport { useHistory } from \"react-router\";\r\nimport { auth, db,app,CurrentUser } from \"../firebase\";\r\n\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogContentText from '@mui/material/DialogContentText';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\n\r\nimport Fab from '@mui/material/Fab';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport Select from '@mui/material/Select';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport moment from \"moment\";\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport * as utils from \"../Util\";\r\nimport { KeyboardDatePicker, MuiPickersUtilsProvider } from \"@material-ui/pickers\";\r\nimport {\r\nButton,\r\nTextField,\r\nGrid,\r\nPaper,\r\nLink,\r\n\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Transaction from './Transaction';\r\nimport { Bar, Chart } from \"react-chartjs-2\";\r\n\r\nconst rand = () => Math.round(Math.random() * 20 - 10);\r\n\r\n\r\nconst fabStyle = {\r\n  position: 'absolute',\r\n  bottom: 16,\r\n  right: 16,\r\n  color: 'common.white',\r\n  bgcolor: '#FBBD14',\r\n  '&:hover': {\r\n    bgcolor: '#C99200',\r\n  },\r\n};\r\n\r\n\r\nfunction Overview() {\r\n\r\n  const [user, loading, error] = useAuthState(auth);\r\n  const [name, setName] = useState(\"\");\r\n  const history = useHistory();\r\n \r\n  const [transactionType_, setTransactionType_] = useState(\"\");\r\n  const [transactionName_, setTransactionName_] = useState(\"\");\r\n  const [price_, setPrice_] = useState(\"\");\r\n  const [date_, setDate_] = useState(new Date());\r\n  const [day_, setDay_] = useState(\"\");\r\n  const [money_, setMoney_] = useState(\"\");\r\n  const [test_array, setTest_array] = useState([]);\r\n  const [history_, setHistory_] = useState([]);\r\n  const [expenseData_, setExpenseData_] = useState({});\r\n\r\n  const [data_expense, setData_expense] = useState({});\r\n\r\n\r\n  const [dateFilter_, setDateFilter_] = useState(new Date());\r\n\r\n  \r\n \r\n\r\n  const handleChangeTest_array_ = (event) => {\r\n    setTest_array(event.target.value);\r\n  };\r\n\r\n  const handleChangeTransactionType_ = (event) => {\r\n    setTransactionType_(event.target.value);\r\n  };\r\n  const handleChangeTransactionName_ = (event) => {\r\n    setTransactionName_(event.target.value);\r\n  };\r\n  const handleChangePrice_ = (event) => {\r\n    setPrice_(event.target.value);\r\n  };\r\n\r\n  const handleChangeDate_ = (newValue) => {\r\n    setDate_(newValue);\r\n  };\r\n  const handleChangeDay_ = (event) => {\r\n    setDay_(event.target.value);\r\n  };\r\n  const handleChangeMoney_ = (event) => {\r\n    setMoney_(event.target.value);\r\n  };\r\n\r\n  const handleChangeDateFilter_ = (newValue) => {\r\n    var first = new Date(Number(newValue.getUTCFullYear()), Number(newValue.getUTCMonth()), Number(newValue.getUTCDate()) );\r\n  var last = new Date(Number(newValue.getUTCFullYear()), Number(newValue.getUTCMonth()), Number(newValue.getUTCDate()) - 6);\r\n  var dates_exported_1 = getDates(last, first);\r\n  app.database().ref('Transactions/' + user?.uid).on(\"value\", data => {\r\n    const eachExpense = utils.eachExpense(data.val());\r\n    const thisUsersExpenses = utils.currentUsersExpenses(eachExpense, user);\r\n    \r\n   \r\n      // console.log([Object.keys(dates_exported_1).map((id) => (\r\n      //   utils.ExpensesInDate_(\r\n      //     eachExpense,\r\n      //     user,\r\n      //     dates_exported_1[id]).map(elem => Number(elem.value.price)).reduce(function(previousValue, currentValue){\r\n      //       return Number(previousValue) + Number(currentValue);\r\n      //     }, 0)\r\n      //     ))][0]);\r\n\r\n      let A = [Object.keys(dates_exported_1).map((id) => (\r\n        utils.IncomeInDate_(\r\n          eachExpense,\r\n          user,\r\n          dates_exported_1[id]).map(elem => Number(elem.value.price)).reduce(function(previousValue, currentValue){\r\n            return Number(previousValue) + Number(currentValue);\r\n          }, 0)\r\n          ))][0];\r\n      let B = [Object.keys(dates_exported_1).map((id) => (\r\n        utils.ExpensesInDate_(\r\n          eachExpense,\r\n          user,\r\n          dates_exported_1[id]).map(elem => Number(elem.value.price)).reduce(function(previousValue, currentValue){\r\n            return Number(previousValue) + Number(currentValue);\r\n          }, 0)\r\n          ))][0];\r\n      let C = A.map((n, i) => n - B[i]);\r\n      console.log(C);\r\n      const data_te = {\r\n        labels: dates_exported_1,\r\n        datasets: [\r\n          {\r\n            label: 'Profit',\r\n            data: C,\r\n            fill: true,\r\n            borderColor: 'rgb(75, 192, 192)',\r\n            tension: 0.2,\r\n            type: 'line',\r\n          },\r\n          {\r\n            type: 'bar',\r\n            label: \"Income\",\r\n            data: A,\r\n            backgroundColor: \"rgba(255,99,132,0.2)\",\r\n            borderColor: \"rgba(255,99,132,1)\",\r\n            borderWidth: 1,\r\n            hoverBackgroundColor: \"rgba(255,99,132,0.4)\",\r\n            hoverBorderColor: \"rgba(255,99,132,1)\",\r\n          },\r\n          {\r\n            type: 'bar',\r\n            label: \"Expenses\",\r\n            data: B,\r\n            backgroundColor: \"rgba(155,231,91,0.2)\",\r\n            borderColor: \"rgba(255,99,132,1)\",\r\n            borderWidth: 1,\r\n            //stack: 1,\r\n            hoverBackgroundColor: \"rgba(255,99,132,0.4)\",\r\n            hoverBorderColor: \"rgba(255,99,132,1)\",\r\n          },\r\n        ]\r\n      };\r\n      setExpenseData_(data_te);\r\n\r\n  });\r\n    setDateFilter_(newValue);\r\n  };\r\n\r\n\r\n  const [forgot, setForgot] = React.useState(false);\r\n  const handleForgotOpen = () => {\r\n    setForgot(true);\r\n  };\r\n\r\n  const handleForgotClose = () => {\r\n    setForgot(false);\r\n  };\r\n\r\n  var getDates = function (startDate, endDate) {\r\n    var dates = [],\r\n        currentDate = startDate,\r\n        addDays = function (days) {\r\n            var date = new Date(this.valueOf());\r\n            date.setDate(date.getDate() + days);\r\n            return date;\r\n        };\r\n    while (currentDate <= endDate) {\r\n        dates.push(currentDate);\r\n        currentDate = addDays.call(currentDate, 1);\r\n    }\r\n    return dates.map(date => new Date(date).toDateString());\r\n};\r\n\r\n\r\n\r\n  var firstDay = new Date(Number(dateFilter_.getUTCFullYear()), Number(dateFilter_.getUTCMonth()), Number(dateFilter_.getUTCDate()) );\r\n  var lastDay = new Date(Number(dateFilter_.getUTCFullYear()), Number(dateFilter_.getUTCMonth()), Number(dateFilter_.getUTCDate()) - 6);\r\n  var dates_exported = getDates(lastDay, firstDay);\r\n\r\n  const addNewTransaction = () =>\r\n  {\r\n  \r\n    if(transactionName_ && transactionType_ && price_){\r\n\r\n      const blankArray = test_array;\r\n      blankArray.push({\r\n          id: blankArray.length + 1,\r\n          name: transactionName_,\r\n          type: transactionType_,\r\n          price: price_,\r\n          user_id: user?.uid,\r\n          date: date_.toDateString(),\r\n          day: date_.getDay(),\r\n      });\r\n      console.log(blankArray);\r\n      \r\n      app.database().ref('Transactions/' + user?.uid).push({\r\n        id: blankArray.length + 1,\r\n        name: transactionName_,\r\n        type: transactionType_,\r\n        price: price_,\r\n        user_id: user?.uid,\r\n        date: date_.toDateString(),\r\n        day: date_.getDay(),\r\n    }).then((data) => {\r\n        //success callback\r\n        console.log('success callback');\r\n        setTest_array(blankArray);\r\n        setMoney_(transactionType_ === 'income' ? money_ + parseFloat(price_) : money_ - parseFloat(price_));\r\n        setTransactionName_(\"\");\r\n        setTransactionType_(\"\");\r\n        setPrice_(\"\");\r\n        setDate_(new Date('2021-10-07T00:00:00'));\r\n    }).catch((error)=>{\r\n        //error callback\r\n        console.log('error ' , error);\r\n       \r\n    });\r\n    \r\n    }\r\n\r\n       \r\n      \r\n  };\r\n  useEffect(() => {\r\n    \r\n    const fetchUserName = async () => {\r\n      try {\r\n        const query = await db\r\n          .collection(\"users\")\r\n          .where(\"uid\", \"==\", user?.uid)\r\n          .get();\r\n        const data = await query.docs[0].data();\r\n        setName(data.name);\r\n        app.database().ref('Transactions/' + user?.uid).on(\"value\", data => {\r\n          console.log(data.val());\r\n          if(data.val() !== null)\r\n          {\r\n          const eachExpense = utils.eachExpense(data.val());\r\n          const thisUsersExpenses = utils.currentUsersExpenses(eachExpense, user);\r\n          \r\n          let totalMoney = utils.totalExpense(thisUsersExpenses);\r\n          \r\n          const expensesToday_ = utils.expensesToday(eachExpense, user);\r\n\r\n          setHistory_(thisUsersExpenses);\r\n          \r\n          setMoney_(totalMoney);\r\n          /*\r\n        \r\n          */\r\n          \r\n            console.log([Object.keys(dates_exported).map((id) => (\r\n              utils.ExpensesInDate_(\r\n                eachExpense,\r\n                user,\r\n                dates_exported[id]).map(elem => Number(elem.value.price)).reduce(function(previousValue, currentValue){\r\n                  return Number(previousValue) + Number(currentValue);\r\n                }, 0)\r\n                ))][0]);\r\n                let A = [Object.keys(dates_exported).map((id) => (\r\n                  utils.IncomeInDate_(\r\n                    eachExpense,\r\n                    user,\r\n                    dates_exported[id]).map(elem => Number(elem.value.price)).reduce(function(previousValue, currentValue){\r\n                      return Number(previousValue) + Number(currentValue);\r\n                    }, 0)\r\n                    ))][0];\r\n                let B = [Object.keys(dates_exported).map((id) => (\r\n                  utils.ExpensesInDate_(\r\n                    eachExpense,\r\n                    user,\r\n                    dates_exported[id]).map(elem => Number(elem.value.price)).reduce(function(previousValue, currentValue){\r\n                      return Number(previousValue) + Number(currentValue);\r\n                    }, 0)\r\n                    ))][0];\r\n                let C = A.map((n, i) => n - B[i]);\r\n                console.log(C)\r\n                const data_te = {\r\n                  labels: dates_exported,\r\n                  datasets: [\r\n                    {\r\n                      label: 'Profit',\r\n                      data: C,\r\n                      fill: true,\r\n                      borderColor: 'rgb(75, 192, 192)',\r\n                      tension: 0.2,\r\n                      type: 'line',\r\n                    },\r\n                    {\r\n                      type: 'bar',\r\n                      label: \"Income\",\r\n                      data: A,\r\n                      backgroundColor: \"rgba(255,99,132,0.2)\",\r\n                      borderColor: \"rgba(255,99,132,1)\",\r\n                      borderWidth: 1,\r\n                      hoverBackgroundColor: \"rgba(255,99,132,0.4)\",\r\n                      hoverBorderColor: \"rgba(255,99,132,1)\",\r\n                    },\r\n                    {\r\n                      type: 'bar',\r\n                      label: \"Expenses\",\r\n                      data: B,\r\n                      backgroundColor: \"rgba(155,231,91,0.2)\",\r\n                      borderColor: \"rgba(255,99,132,1)\",\r\n                      borderWidth: 1,\r\n                      //stack: 1,\r\n                      hoverBackgroundColor: \"rgba(255,99,132,0.4)\",\r\n                      hoverBorderColor: \"rgba(255,99,132,1)\",\r\n                    },\r\n                  ]\r\n                };\r\n            setExpenseData_(data_te);\r\n          }\r\n        });\r\n      } catch (err) {\r\n        console.error(err);\r\n        alert(\"An error occured while fetching user data\");\r\n      }\r\n    };\r\n    if (loading) return;\r\n    if (!user) return history.replace(\"/\");\r\n    \r\n    fetchUserName();\r\n  }, [user, loading,\r\n    history]);\r\n  return (\r\n    <div>\r\n      <script src=\"https://www.gstatic.com/firebasejs/9.1.1/firebase-auth.js\"></script>\r\n<script src=\"https://www.gstatic.com/firebasejs/9.1.1/firebase-database.js\"></script>\r\n      <p class=\"tag-next-test\">\r\n        Welcome, {name}!\r\n      </p>\r\n      <p class=\"tag-next-balance\">\r\n        Your Balance: PHP {money_.toLocaleString()}\r\n      </p>\r\n      <div class=\"row\">\r\n      <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n            <KeyboardDatePicker\r\n          label=\"Filter Weekly\"\r\n          format=\"dd/MM/yyyy\"\r\n          value={dateFilter_}\r\n          onChange={handleChangeDateFilter_}\r\n          renderInput={(params) => <TextField {...params} />}\r\n        />\r\n       </MuiPickersUtilsProvider>\r\n      <div class=\"column\"><Bar data={expenseData_}  /></div>\r\n      </div> \r\n\r\n      <div class=\"transaction-block\">\r\n      <Fab sx={fabStyle} aria-label=\"add\" onClick={handleForgotOpen}>\r\n        <AddIcon />\r\n      </Fab>\r\n      <Dialog open={forgot} onClose={handleForgotClose} fullWidth>\r\n      <DialogTitle>Transaction</DialogTitle>\r\n        <DialogContent>\r\n          <Grid container direction=\"column\" spacing={2} >\r\n            <Grid item>\r\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n            <KeyboardDatePicker\r\n          label=\"Date of Transaction\"\r\n          format=\"dd/MM/yyyy\"\r\n          value={date_}\r\n          onChange={handleChangeDate_}\r\n          renderInput={(params) => <TextField {...params} />}\r\n          fullWidth\r\n        />\r\n       </MuiPickersUtilsProvider>\r\n            </Grid>\r\n          <Grid item>\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"t-name\"\r\n            label=\"Transaction Name\"\r\n            type=\"text\"\r\n            fullWidth\r\n            variant=\"standard\"\r\n            value={transactionName_}\r\n            onChange={(e) => setTransactionName_(e.target.value)}\r\n          />\r\n          </Grid>\r\n          <Grid item>\r\n          <TextField\r\n            margin=\"dense\"\r\n            id=\"Price \"\r\n            label=\"Price\"\r\n            type=\"number\"\r\n            fullWidth\r\n            variant=\"standard\"\r\n            value={price_}\r\n            onChange={(e) => setPrice_(e.target.value)}\r\n          />\r\n          </Grid>\r\n          <Grid item>\r\n          <FormControl fullWidth>\r\n          <InputLabel id=\"type-label\">Transaction type</InputLabel>  \r\n           <Select\r\n          labelId=\"type-label\"\r\n          id=\"type-label\"\r\n          label=\"Transaction Type\"\r\n          autoWidth\r\n          value={transactionType_}\r\n          onChange={handleChangeTransactionType_}\r\n          >\r\n          <MenuItem value={\"income\"} autoWidth>Income</MenuItem>\r\n          <MenuItem value={\"expense\"} autoWidth>Expense</MenuItem>\r\n        </Select>\r\n        </FormControl>\r\n          </Grid>\r\n        </Grid>\r\n        </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={handleForgotClose}>Cancel</Button>\r\n            <Button onClick={addNewTransaction}>Add Transaction</Button>\r\n          </DialogActions>\r\n      </Dialog>\r\n      </div>\r\n\r\n      \r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Overview;","\r\nimport React, {  useState } from \"react\";\r\nimport { logout } from \"../firebase\";\r\n\r\nfunction Logout() {\r\n    return (\r\n      <div className=\"Logout\">\r\n        {logout()}\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default Logout;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classNames from \"classnames\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport List from \"@material-ui/core/List\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport logo from './logo.svg';\r\nimport './Home.css';\r\nimport { SidebarData } from './SidebarData';\r\nimport { NavLink,BrowserRouter,Route,Switch } from 'react-router-dom';\r\nimport History from './pages/History';\r\nimport Reports from './Reports';\r\nimport Overview from './pages/Overview';\r\nimport Logout from './pages/Logout';\r\nimport { createMuiTheme,ThemeProvider  } from '@material-ui/core/styles';\r\n\r\n\r\nconst drawerWidth = 220;\r\n\r\nconst theme_prov = createMuiTheme({\r\n  \r\n  typography: {\r\n    fontFamily: ['\"Montserrat Medium\"'].join(','),\r\n    button:\r\n    {\r\n      textTransform: 'none',\r\n      width:'90%',\r\n      palette:\r\n      {\r\n        primary: '#FBBD14'\r\n      }\r\n    },\r\n   },\r\n },\r\n)\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    display: \"flex\"\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    background: '#35B9A1'\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen\r\n    })\r\n  },\r\n  menuButton: {\r\n    marginLeft: -80,\r\n    marginRight: 36\r\n  },\r\n  menuButtonIconClosed: {\r\n    transition: theme.transitions.create([\"transform\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen\r\n    }),\r\n    transform: \"rotate(0deg)\"\r\n  },\r\n  menuButtonIconOpen: {\r\n    transition: theme.transitions.create([\"transform\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen\r\n    }),\r\n    transform: \"rotate(180deg)\"\r\n  },\r\n  hide: {\r\n    display: \"none\"\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n    whiteSpace: \"nowrap\"\r\n  },\r\n  drawerOpen: {\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen\r\n    })\r\n  },\r\n  drawerClose: {\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen\r\n    }),\r\n    overflowX: \"hidden\",\r\n    width: theme.spacing.unit * 7 + 1,\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: theme.spacing.unit * 9 + 1\r\n    }\r\n  },\r\n  toolbar: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    marginTop: theme.spacing.unit,\r\n    justifyContent: \"flex-end\",\r\n    padding: \"38px 8px\",\r\n    ...theme.mixins.toolbar\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing.unit * 3\r\n  },\r\n  grow: {\r\n    flexGrow: 1\r\n  },\r\n  myComponent: {\r\n      paddingRight: 25,\r\n  }\r\n});\r\n\r\n\r\nclass MiniDrawer extends React.Component {\r\n  \r\n  state = {\r\n    open: true,\r\n    anchorEl: null\r\n  };\r\n\r\n\r\n  handleMenu = event => {\r\n    this.setState({ anchorEl: event.currentTarget });\r\n  };\r\n  handleClose = () => {\r\n    this.setState({ anchorEl: null });\r\n  };\r\n\r\n  \r\n\r\n\r\n  render() {\r\n    const { classes, theme } = this.props;\r\n    const { anchorEl } = this.state;\r\n    const open = Boolean(anchorEl);\r\n    return (\r\n      <div className={classes.root}>\r\n        <BrowserRouter>\r\n        <CssBaseline />\r\n        <AppBar\r\n          position=\"fixed\"\r\n          className={classes.appBar}\r\n          fooJon={classNames(classes.appBar, {\r\n            [classes.appBarShift]: this.state.open\r\n          })}\r\n        >\r\n          <Toolbar disableGutters={true}>\r\n            <img src={logo} className=\"App-logo-home\" alt=\"logo\" />\r\n            <Typography\r\n              variant=\"h6\"\r\n              color=\"inherit\"\r\n              className={classes.grow}\r\n              noWrap\r\n            >\r\n              <div class=\"large-home\">\r\n              ipon.app\r\n              </div>\r\n            </Typography>\r\n          </Toolbar>\r\n        </AppBar>\r\n        <ThemeProvider theme={theme_prov}>\r\n        <Drawer\r\n          variant=\"permanent\"\r\n          className={classes.drawerOpen\r\n          }\r\n          classes={{\r\n            paper: classes.drawerOpen\r\n          }}\r\n          open={this.state.open}\r\n        >\r\n          <div className={classes.toolbar} />\r\n          <List>\r\n            {\r\n            SidebarData.map((text, index) => {\r\n              return(\r\n                <Tooltip title={text.tool} arrow placement=\"right-start\">\r\n                <ListItem button={true} {...{ component: NavLink, to: text.path }}>\r\n                <ListItemIcon>\r\n                  {text.icon}\r\n                </ListItemIcon>\r\n                <ListItemText primary={text.title} />\r\n              </ListItem>\r\n              </Tooltip>\r\n              );\r\n            }\r\n            )\r\n          }\r\n          </List>\r\n              \r\n        </Drawer>\r\n        </ThemeProvider>\r\n        <main className={classes.content}>\r\n          <div className={classes.toolbar} />\r\n          \r\n          <Switch>\r\n              <Route path='/dashboard' exact component={Overview} />\r\n              <Route path='/history' component={History} />\r\n              <Route path='/payables' component={Reports} />\r\n              <Route path='/logout' component={Logout} />\r\n            </Switch>\r\n          \r\n        </main>\r\n      </BrowserRouter>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nMiniDrawer.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  theme: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles, { withTheme: true })(MiniDrawer);\r\n","import Main from './Main';\nimport React, { useEffect, useState } from \"react\";\nimport { useAuthState } from \"react-firebase-hooks/auth\";\nimport { useHistory } from \"react-router\";\nimport { auth, db } from \"./firebase\";\n\n\nfunction App() {\n  const [user, loading, error] = useAuthState(auth);\n  const [name, setName] = useState(\"\");\n  const history = useHistory();\n  const refreshPage = ()=>{\n      history.replace(\"/\");\n      window.location.reload();\n      \n   }\n  useEffect(() => {\n    \n    const fetchUserName = async () => {\n      try {\n        const query = await db\n          .collection(\"users\")\n          .where(\"uid\", \"==\", user?.uid)\n          .get();\n        const data = await query.docs[0].data();\n        setName(data.name);\n      } catch (err) {\n        console.error(err);\n        alert(\"An error occured while fetching user data\");\n      }\n    };\n    if (loading) return;\n    if (!user) return (refreshPage());\n    \n    fetchUserName();\n  }, [user, loading]);\n  return (\n    <div>\n      \n      {\n        user \n          ? <Main/>\n          : <div>{refreshPage()}</div>\n      }\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Login from './Login';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    \n    <Router>\n        <Switch>\n        <Route path='/' exact component={Login} />\n        <Route path='/dashboard' component={App} />\n        </Switch>\n        </Router>\n    {/* <Main/> */}\n    \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}