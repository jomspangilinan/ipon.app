{"ast":null,"code":"var _jsxFileName = \"D:\\\\React Projects\\\\my-app\\\\src\\\\pages\\\\Overview.js\";\nimport React, { Component } from \"react\";\nimport { useAuthState } from \"react-firebase-hooks/auth\";\nimport { useHistory } from \"react-router\";\nimport { auth, db, app } from \"../firebase\";\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport Fab from '@mui/material/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport MenuItem from '@mui/material/MenuItem';\nimport Select from '@mui/material/Select';\nimport FormControl from '@mui/material/FormControl';\nimport InputLabel from '@mui/material/InputLabel';\nimport { Button, TextField, Grid, Paper, Link } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Line } from \"react-chartjs-2\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst data = {\n  labels: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\"],\n  datasets: [{\n    tension: 0.2,\n    label: \"First dataset\",\n    data: [33, 53, 85, 41, 44, 65],\n    fill: true,\n    backgroundColor: \"rgba(75,192,192,0.2)\",\n    borderColor: \"rgba(75,192,192,1)\"\n  }, {\n    label: \"Second dataset\",\n    data: [33, 25, 35, 51, 54, 76],\n    fill: false,\n    borderColor: \"#742774\"\n  }]\n};\nconst fabStyle = {\n  position: 'absolute',\n  bottom: 16,\n  right: 16,\n  color: 'common.white',\n  bgcolor: '#FBBD14',\n  '&:hover': {\n    bgcolor: '#C99200'\n  }\n};\n\nclass Overview extends Component {\n  render() {\n    var currentUser = app.auth().currentUser;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Hello\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        class: \"tag-next-test\",\n        children: [\"Welcome, \", currentUser.displayName, \"!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n/*\r\nfunction Overview() {\r\n  const [user, loading, error] = useAuthState(auth);\r\n  const [name, setName] = useState(\"\");\r\n  const history = useHistory();\r\n \r\n  const [transactionType_, setTransactionType_] = useState(\"\");\r\n  const [transactionName_, setTransactionName_] = useState(\"\");\r\n  const [price_, setPrice_] = useState(\"\");\r\n\r\n  const handleChangeTransactionType_ = (event) => {\r\n    setTransactionType_(event.target.value);\r\n  };\r\n  const handleChangeTransactionName_ = (event) => {\r\n    setTransactionName_(event.target.value);\r\n  };\r\n  const handleChangePrice_ = (event) => {\r\n    setPrice_(event.target.value);\r\n  };\r\n\r\n  \r\n  handleChange = input => e => {\r\n    this.setState({\r\n        [input]: e.target.value !==\"0\" ? e.target.value : \"\"\r\n    });\r\n}\r\n\r\n  const [forgot, setForgot] = React.useState(false);\r\n  const handleForgotOpen = () => {\r\n    setForgot(true);\r\n  };\r\n\r\n  const handleForgotClose = () => {\r\n    setForgot(false);\r\n  };\r\n\r\n  const [test, setTest] = useState({\r\n    transactions: [],\r\n    money: 0,\r\n\r\n    transactionName: '',\r\n    transactionType: '',\r\n    price: '',\r\n    currentUID: auth.currentUser.uid\r\n\r\n  });\r\n\r\n\r\n\r\n  const addNewTransaction = () =>\r\n  {\r\n    \r\n\r\n    if(transactionName_ && transactionType_ && price_){\r\n\r\n      const BackUpState = this.state.transactions;\r\n      BackUpState.push({\r\n          id: BackUpState.length + 1,\r\n          name: transactionName_,\r\n          type: transactionType_,\r\n          price: price_,\r\n          user_id: currentUID\r\n      });\r\n      console.log(BackUpState);\r\n    }\r\n      \r\n  };\r\n  useEffect(() => {\r\n    const fetchUserName = async () => {\r\n      try {\r\n        const query = await db\r\n          .collection(\"users\")\r\n          .where(\"uid\", \"==\", user?.uid)\r\n          .get();\r\n        const data = await query.docs[0].data();\r\n        setName(data.name);\r\n      } catch (err) {\r\n        console.error(err);\r\n        alert(\"An error occured while fetching user data\");\r\n      }\r\n    };\r\n    if (loading) return;\r\n    if (!user) return history.replace(\"/\");\r\n    \r\n    fetchUserName();\r\n  }, [user, loading,\r\n    history]);\r\n  return (\r\n    <div>\r\n      \r\n      <p class=\"tag-next-test\">\r\n        Welcome, {name}!\r\n      </p>\r\n      <p class=\"tag-next-balance\">\r\n        Your Balance: PHP 500,000\r\n      </p>\r\n      <div class=\"row\">\r\n      <div class=\"column\"><Line data={data} /></div>\r\n      <div class=\"column\"><Line data={data} /></div>\r\n      </div> \r\n\r\n      <div class=\"transaction-block\">\r\n      <Fab sx={fabStyle} aria-label=\"add\" onClick={handleForgotOpen}>\r\n        <AddIcon />\r\n      </Fab>\r\n      <Dialog open={forgot} onClose={handleForgotClose} fullWidth>\r\n      <DialogTitle>Transaction</DialogTitle>\r\n        <DialogContent>\r\n          <Grid container direction=\"column\" spacing={2} >\r\n          <Grid item>\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"t-name\"\r\n            label=\"Transaction Name\"\r\n            type=\"text\"\r\n            fullWidth\r\n            variant=\"standard\"\r\n            onChange={this.handleChange('transactionName')}\r\n            value=\r\n          />\r\n          </Grid>\r\n          <Grid item>\r\n          <TextField\r\n            margin=\"dense\"\r\n            id=\"Price \"\r\n            label=\"Price\"\r\n            type=\"text\"\r\n            fullWidth\r\n            variant=\"standard\"\r\n            onChange={(e) => setPrice_(e.target.value)}\r\n          />\r\n          </Grid>\r\n          <Grid item>\r\n          <FormControl fullWidth>\r\n          <InputLabel id=\"type-label\">Transaction type</InputLabel>  \r\n           <Select\r\n          labelId=\"type-label\"\r\n          id=\"type-label\"\r\n          label=\"Transaction Type\"\r\n          autoWidth\r\n          value={transactionType_}\r\n          onChange={handleChangeTransactionType_}\r\n          >\r\n          <MenuItem value={\"income\"} autoWidth>Income</MenuItem>\r\n          <MenuItem value={\"expense\"} autoWidth>Expense</MenuItem>\r\n        </Select>\r\n        </FormControl>\r\n          </Grid>\r\n        </Grid>\r\n        </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={handleForgotClose}>Cancel</Button>\r\n            <Button onClick={addNewTransaction}>Add Transaction</Button>\r\n          </DialogActions>\r\n      </Dialog>\r\n      </div>\r\n    </div>\r\n  );\r\n}*/\n\n\nexport default Overview;","map":{"version":3,"sources":["D:/React Projects/my-app/src/pages/Overview.js"],"names":["React","Component","useAuthState","useHistory","auth","db","app","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","Fab","AddIcon","MenuItem","Select","FormControl","InputLabel","Button","TextField","Grid","Paper","Link","makeStyles","Line","data","labels","datasets","tension","label","fill","backgroundColor","borderColor","fabStyle","position","bottom","right","color","bgcolor","Overview","render","currentUser","displayName"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,YAAT,QAA6B,2BAA7B;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,SAASC,IAAT,EAAeC,EAAf,EAAkBC,GAAlB,QAA6B,aAA7B;AAEA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,OAAOC,iBAAP,MAA8B,iCAA9B;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AAEA,OAAOC,GAAP,MAAgB,mBAAhB;AACA,OAAOC,OAAP,MAAoB,wBAApB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AAEA,SACAC,MADA,EAEAC,SAFA,EAGAC,IAHA,EAIAC,KAJA,EAKAC,IALA,QAMO,mBANP;AAOA,SAASC,UAAT,QAA2B,0BAA3B;AAEA,SAASC,IAAT,QAAqB,iBAArB;;AAEA,MAAMC,IAAI,GAAG;AACXC,EAAAA,MAAM,EAAE,CAAC,KAAD,EAAQ,KAAR,EAAe,KAAf,EAAsB,KAAtB,EAA6B,KAA7B,EAAoC,KAApC,CADG;AAEXC,EAAAA,QAAQ,EAAE,CACR;AACEC,IAAAA,OAAO,EAAE,GADX;AAEEC,IAAAA,KAAK,EAAE,eAFT;AAGEJ,IAAAA,IAAI,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiB,EAAjB,EAAqB,EAArB,CAHR;AAIEK,IAAAA,IAAI,EAAE,IAJR;AAKEC,IAAAA,eAAe,EAAE,sBALnB;AAMEC,IAAAA,WAAW,EAAE;AANf,GADQ,EASR;AACEH,IAAAA,KAAK,EAAE,gBADT;AAEEJ,IAAAA,IAAI,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiB,EAAjB,EAAqB,EAArB,CAFR;AAGEK,IAAAA,IAAI,EAAE,KAHR;AAIEE,IAAAA,WAAW,EAAE;AAJf,GATQ;AAFC,CAAb;AAmBA,MAAMC,QAAQ,GAAG;AACfC,EAAAA,QAAQ,EAAE,UADK;AAEfC,EAAAA,MAAM,EAAE,EAFO;AAGfC,EAAAA,KAAK,EAAE,EAHQ;AAIfC,EAAAA,KAAK,EAAE,cAJQ;AAKfC,EAAAA,OAAO,EAAE,SALM;AAMf,aAAW;AACTA,IAAAA,OAAO,EAAE;AADA;AANI,CAAjB;;AAWA,MAAMC,QAAN,SAAuBtC,SAAvB,CAAiC;AAC/BuC,EAAAA,MAAM,GAAE;AACN,QAAIC,WAAW,GAAGnC,GAAG,CAACF,IAAJ,GAAWqC,WAA7B;AACA,wBACI;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEA;AAAG,QAAA,KAAK,EAAC,eAAT;AAAA,gCACUA,WAAW,CAACC,WADtB;AAAA;AAAA;AAAA;AAAA;AAAA,cAFA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAQD;;AAX8B;AAajeAAeH,QAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport { useAuthState } from \"react-firebase-hooks/auth\";\r\nimport { useHistory } from \"react-router\";\r\nimport { auth, db,app } from \"../firebase\";\r\n\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogContentText from '@mui/material/DialogContentText';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\n\r\nimport Fab from '@mui/material/Fab';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport Select from '@mui/material/Select';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport InputLabel from '@mui/material/InputLabel';\r\n\r\nimport {\r\nButton,\r\nTextField,\r\nGrid,\r\nPaper,\r\nLink,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport { Line } from \"react-chartjs-2\";\r\n\r\nconst data = {\r\n  labels: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\"],\r\n  datasets: [\r\n    {\r\n      tension: 0.2,\r\n      label: \"First dataset\",\r\n      data: [33, 53, 85, 41, 44, 65],\r\n      fill: true,\r\n      backgroundColor: \"rgba(75,192,192,0.2)\",\r\n      borderColor: \"rgba(75,192,192,1)\"\r\n    },\r\n    {\r\n      label: \"Second dataset\",\r\n      data: [33, 25, 35, 51, 54, 76],\r\n      fill: false,\r\n      borderColor: \"#742774\"\r\n    },\r\n  ]\r\n};\r\nconst fabStyle = {\r\n  position: 'absolute',\r\n  bottom: 16,\r\n  right: 16,\r\n  color: 'common.white',\r\n  bgcolor: '#FBBD14',\r\n  '&:hover': {\r\n    bgcolor: '#C99200',\r\n  },\r\n};\r\n\r\nclass Overview extends Component {\r\n  render(){\r\n    var currentUser = app.auth().currentUser;\r\n    return(\r\n        <div>\r\n          <h1>Hello</h1>\r\n        <p class=\"tag-next-test\">\r\n        Welcome, {currentUser.displayName}!\r\n      </p>\r\n    </div>\r\n    );\r\n  }\r\n}\r\n/*\r\nfunction Overview() {\r\n  const [user, loading, error] = useAuthState(auth);\r\n  const [name, setName] = useState(\"\");\r\n  const history = useHistory();\r\n \r\n  const [transactionType_, setTransactionType_] = useState(\"\");\r\n  const [transactionName_, setTransactionName_] = useState(\"\");\r\n  const [price_, setPrice_] = useState(\"\");\r\n\r\n  const handleChangeTransactionType_ = (event) => {\r\n    setTransactionType_(event.target.value);\r\n  };\r\n  const handleChangeTransactionName_ = (event) => {\r\n    setTransactionName_(event.target.value);\r\n  };\r\n  const handleChangePrice_ = (event) => {\r\n    setPrice_(event.target.value);\r\n  };\r\n\r\n  \r\n  handleChange = input => e => {\r\n    this.setState({\r\n        [input]: e.target.value !==\"0\" ? e.target.value : \"\"\r\n    });\r\n}\r\n\r\n  const [forgot, setForgot] = React.useState(false);\r\n  const handleForgotOpen = () => {\r\n    setForgot(true);\r\n  };\r\n\r\n  const handleForgotClose = () => {\r\n    setForgot(false);\r\n  };\r\n\r\n  const [test, setTest] = useState({\r\n    transactions: [],\r\n    money: 0,\r\n\r\n    transactionName: '',\r\n    transactionType: '',\r\n    price: '',\r\n    currentUID: auth.currentUser.uid\r\n\r\n  });\r\n\r\n\r\n\r\n  const addNewTransaction = () =>\r\n  {\r\n    \r\n\r\n    if(transactionName_ && transactionType_ && price_){\r\n\r\n      const BackUpState = this.state.transactions;\r\n      BackUpState.push({\r\n          id: BackUpState.length + 1,\r\n          name: transactionName_,\r\n          type: transactionType_,\r\n          price: price_,\r\n          user_id: currentUID\r\n      });\r\n      console.log(BackUpState);\r\n    }\r\n      \r\n  };\r\n  useEffect(() => {\r\n    const fetchUserName = async () => {\r\n      try {\r\n        const query = await db\r\n          .collection(\"users\")\r\n          .where(\"uid\", \"==\", user?.uid)\r\n          .get();\r\n        const data = await query.docs[0].data();\r\n        setName(data.name);\r\n      } catch (err) {\r\n        console.error(err);\r\n        alert(\"An error occured while fetching user data\");\r\n      }\r\n    };\r\n    if (loading) return;\r\n    if (!user) return history.replace(\"/\");\r\n    \r\n    fetchUserName();\r\n  }, [user, loading,\r\n    history]);\r\n  return (\r\n    <div>\r\n      \r\n      <p class=\"tag-next-test\">\r\n        Welcome, {name}!\r\n      </p>\r\n      <p class=\"tag-next-balance\">\r\n        Your Balance: PHP 500,000\r\n      </p>\r\n      <div class=\"row\">\r\n      <div class=\"column\"><Line data={data} /></div>\r\n      <div class=\"column\"><Line data={data} /></div>\r\n      </div> \r\n\r\n      <div class=\"transaction-block\">\r\n      <Fab sx={fabStyle} aria-label=\"add\" onClick={handleForgotOpen}>\r\n        <AddIcon />\r\n      </Fab>\r\n      <Dialog open={forgot} onClose={handleForgotClose} fullWidth>\r\n      <DialogTitle>Transaction</DialogTitle>\r\n        <DialogContent>\r\n          <Grid container direction=\"column\" spacing={2} >\r\n          <Grid item>\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"t-name\"\r\n            label=\"Transaction Name\"\r\n            type=\"text\"\r\n            fullWidth\r\n            variant=\"standard\"\r\n            onChange={this.handleChange('transactionName')}\r\n            value=\r\n          />\r\n          </Grid>\r\n          <Grid item>\r\n          <TextField\r\n            margin=\"dense\"\r\n            id=\"Price \"\r\n            label=\"Price\"\r\n            type=\"text\"\r\n            fullWidth\r\n            variant=\"standard\"\r\n            onChange={(e) => setPrice_(e.target.value)}\r\n          />\r\n          </Grid>\r\n          <Grid item>\r\n          <FormControl fullWidth>\r\n          <InputLabel id=\"type-label\">Transaction type</InputLabel>  \r\n           <Select\r\n          labelId=\"type-label\"\r\n          id=\"type-label\"\r\n          label=\"Transaction Type\"\r\n          autoWidth\r\n          value={transactionType_}\r\n          onChange={handleChangeTransactionType_}\r\n          >\r\n          <MenuItem value={\"income\"} autoWidth>Income</MenuItem>\r\n          <MenuItem value={\"expense\"} autoWidth>Expense</MenuItem>\r\n        </Select>\r\n        </FormControl>\r\n          </Grid>\r\n        </Grid>\r\n        </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={handleForgotClose}>Cancel</Button>\r\n            <Button onClick={addNewTransaction}>Add Transaction</Button>\r\n          </DialogActions>\r\n      </Dialog>\r\n      </div>\r\n    </div>\r\n  );\r\n}*/\r\n\r\nexport default Overview;"]},"metadata":{},"sourceType":"module"}