{"ast":null,"code":"import moment from\"moment\";export var eachExpense=function eachExpense(expenses){return Object.keys(expenses).map(function(key){return{key:key,value:expenses[key]};}).sort(function(a,b){// Turn your strings into dates, and then subtract them\n// to get a value that is either negative, positive, or zero.\nreturn new Date(b.value.date)-new Date(a.value.date);});};export var currentUsersExpenses=function currentUsersExpenses(eachExpense,currentUser){return eachExpense.filter(function(elem){return elem.value.user_id===currentUser.uid;});};// expenses in selected month and year\nexport var expensesinMonthAndYear=function expensesinMonthAndYear(eachExpense,currentUser,selectedMonth,selectedYear){return eachExpense.filter(function(elem){return elem.value.uid===currentUser.uid;}).filter(function(elem){return new Date(elem.value.date).getFullYear().toString()===selectedYear.toString();}).filter(function(elem){return new Date(elem.value.date).getMonth().toString()===selectedMonth;});};// expenses in selected year\nexport var expensesinSelectedYear=function expensesinSelectedYear(eachExpense,currentUser,selectedYear){return eachExpense.filter(function(elem){return elem.value.uid===currentUser.uid;}).filter(function(elem){return new Date(elem.value.date).getFullYear().toString()===selectedYear.toString();});};// expenses in a selected date\nexport var expensesInDate=function expensesInDate(eachExpense,currentUser,date){return eachExpense.filter(function(elem){return elem.value.user_id===currentUser.uid&&elem.value.date===date;});};export var ExpensesInDate_=function ExpensesInDate_(eachExpense,currentUser,date){return eachExpense.filter(function(elem){return elem.value.user_id===currentUser.uid&&elem.value.date===date&&elem.value.type==='expense';});};export var IncomeInDate_=function IncomeInDate_(eachExpense,currentUser,date){return eachExpense.filter(function(elem){return elem.value.user_id===currentUser.uid&&elem.value.date===date&&elem.value.type==='income';});};// expenses in current month\nexport var currentMonthExpenses=function currentMonthExpenses(eachExpense,currentUser){return eachExpense.filter(function(elem){return elem.value.uid===currentUser.uid&&new Date(elem.value.date).getMonth()===new Date().getMonth()&&new Date(elem.value.date).getFullYear()===new Date().getFullYear();});};// expense in current year\nexport var expensesinCurrentYear=function expensesinCurrentYear(eachExpense,currentUser){return eachExpense.filter(function(elem){return elem.value.uid===currentUser.uid;}).filter(function(elem){return new Date(elem.value.date).getFullYear().toString()===new Date().getFullYear().toString();});};// expenses in a particular month of this year\nexport var expensesinMonth=function expensesinMonth(eachExpense,currentUser,MonthNumber,selectedYear){return eachExpense.filter(function(elem){return elem.value.uid===currentUser.uid;}).filter(function(elem){return new Date(elem.value.date).getFullYear().toString()===selectedYear.toString();}).filter(function(elem){return new Date(elem.value.date).getMonth().toString()===MonthNumber;});};// expense today\nexport var expensesToday=function expensesToday(eachExpense,currentUser){return eachExpense.filter(function(elem){return elem.value.user_id===currentUser.uid&&new Date(elem.value.date).getMonth()===new Date().getMonth();}).filter(function(elem){return new Date(elem.value.date).getDate()===new Date().getDate();});};// expense this week\nexport var expensesThisWeek=function expensesThisWeek(eachExpense,currentUser){return eachExpense.filter(function(elem){return elem.value.uid===currentUser.uid&&moment(elem.value.date,\"MM/DD/YYYY\").week()===moment(moment(new Date()),\"MM/DD/YYYY\").week()&&moment(elem.value.date,\"MM/DD/YYYY\").year()===moment(moment(new Date()),\"MM/DD/YYYY\").year();});};// expenses Total\nexport var totalExpense=function totalExpense(expenses){if(expenses.length){var totalMoney=0;return expenses.map(function(elem){return Number(elem.value.type==='income'?parseFloat(elem.value.price)+totalMoney:totalMoney-parseFloat(elem.value.price));}).reduce(function(prev,cur){return prev+cur;});}else{return 0;}};// most spend day\nexport var mostSpentDay=function mostSpentDay(expenses){var monday=0;var tuesday=0;var wednesday=0;var thursday=0;var friday=0;var saturday=0;var sunday=0;expenses.map(function(elem){switch(elem.value.day.toString()){case\"0\":sunday=sunday+1;return\"\";case\"1\":monday=monday+1;return\"\";case\"2\":tuesday=tuesday+1;return\"\";case\"3\":wednesday=wednesday+1;return\"\";case\"4\":thursday=thursday+1;return\"\";case\"5\":friday=friday+1;return\"\";case\"6\":saturday=saturday+1;return\"\";default:return\"\";}});var mostDaysObj={sunday:sunday,monday:monday,tuesday:tuesday,wednesday:wednesday,thursday:thursday,friday:friday,saturday:saturday};var sortable=[];for(var day in mostDaysObj){sortable.push([day,mostDaysObj[day]]);}var sortedCategories=sortable.sort(function(a,b){return b[1]-a[1];});return{mostSpentDay:expenses.length?sortedCategories[0][0]:\"-\",leastSpentDay:expenses.length?sortedCategories[6][0]:\"-\"};};// Total expenses in Each month\nexport var totalExpensesInEachMonthOfThisYear=function totalExpensesInEachMonthOfThisYear(expenses,eachExpense,currentUser,selectedYear){var expensesOfAllMonthsInThisYear=[];for(var i=0;i<=11;i++){expensesOfAllMonthsInThisYear.push(totalExpense(expensesinMonth(eachExpense,currentUser,String(i),selectedYear)));}return expensesOfAllMonthsInThisYear;};// Total for each category\nexport var calculateTotalForAllCategories=function calculateTotalForAllCategories(expenses){var categories=[\"Food\",\"Automobile\",\"Entertainment\",\"Clothing\",\"Healthcare\",\"Travel\",\"Shopping\",\"Personal Care\",\"Investment\",\"Gifts & Donations\",\"Bills & Utilities\",\"Others\"];var categoryTotal={Food:0,Automobile:0,Entertainment:0,Clothing:0,Healthcare:0,Travel:0,Shopping:0,\"Personal Care\":0,Investment:0,\"Gifts & Donations\":0,\"Bills & Utilities\":0,Others:0};var totalForACategory=function totalForACategory(expenses,category){var temp=expenses.filter(function(elem){return elem.value.category===category;}).map(function(el){return Number(el.value.expense);});var category=category;if(temp.length){return categoryTotal[category]=temp.reduce(function(prev,cur){return prev+cur;});}else{return categoryTotal[category]=0;}};categories.map(function(category){return totalForACategory(expenses,category);});console.log(\"category total\",categoryTotal);return categoryTotal;};// most spent on category\nexport var mostSpentCategory=function mostSpentCategory(expenses){var categoryTotals=calculateTotalForAllCategories(expenses);var sortable=[];for(var cat in categoryTotals){sortable.push([cat,categoryTotals[cat]]);}var sortedCategories=sortable.sort(function(a,b){return b[1]-a[1];});return expenses.length?sortedCategories[0][0]:\"-\";};// all categories\nexport var categories=[\"Food\",\"Automobile\",\"Entertainment\",\"Clothing\",\"Healthcare\",\"Travel\",\"Shopping\",\"Personal Care\",\"Investment\",\"Gifts & Donations\",\"Bills & Utilities\",\"Others\"];// colors for each category\nexport var categoryColors=[\"#FF965D\",\"#FFCC78\",\"#A08E78\",\"#8DA685\",\"#00A3EA\",\"#3EA75E\",\"#16B498\",\"#FF1945\",\"#FF5473\",\"#927959\",\"#7E0332\",\"#872AEF\"];// retrun border color for each category - daily and monthly view\n/*\r\n@method : categoryName\r\n@params : \r\n    cat: category name\r\n    name: name of the component (Basically we're retrieving styles based on category here)\r\n@return : styles based on category for a particular component based on name \r\n*/export var categoryName=function categoryName(cat,name){switch(cat){case\"Food\":return name===\"card\"?{borderBottom:\"5px solid #FF965D\"}:{borderLeft:\"10px solid #FF965D\"};case\"Automobile\":return name===\"card\"?{borderBottom:\"5px solid #FFCC78\"}:{borderLeft:\"10px solid #FFCC78\"};case\"Entertainment\":return name===\"card\"?{borderBottom:\"5px solid #A08E78\"}:{borderLeft:\"10px solid #A08E78\"};case\"Clothing\":return name===\"card\"?{borderBottom:\"5px solid #8DA685\"}:{borderLeft:\"10px solid #8DA685\"};case\"Healthcare\":return name===\"card\"?{borderBottom:\"5px solid #00A3EA\"}:{borderLeft:\"10px solid #00A3EA\"};case\"Travel\":return name===\"card\"?{borderBottom:\"5px solid #3EA75E\"}:{borderLeft:\"10px solid #3EA75E\"};case\"Shopping\":return name===\"card\"?{borderBottom:\"5px solid #16B498\"}:{borderLeft:\"10px solid #16B498\"};case\"Personal Care\":return name===\"card\"?{borderBottom:\"5px solid #FF1945\"}:{borderLeft:\"10px solid #FF1945\"};case\"Investment\":return name===\"card\"?{borderBottom:\"5px solid #FF5473\"}:{borderLeft:\"10px solid #FF5473\"};case\"Gifts & Donations\":return name===\"card\"?{borderBottom:\"5px solid #927959\"}:{borderLeft:\"10px solid #927959\"};case\"Bills & Utilities\":return name===\"card\"?{borderBottom:\"5px solid #7E0332\"}:{borderLeft:\"10px solid #7E0332\"};case\"Others\":return name===\"card\"?{borderBottom:\"5px solid #872AEF\"}:{borderLeft:\"10px solid #872AEF\"};default:return{borderBottom:\"5px solid orange\"};}};export var categoryIcon=function categoryIcon(category){switch(category){case\"Food\":return\"cutlery\";case\"Automobile\":return\"motorcycle\";case\"Entertainment\":return\"film\";case\"Clothing\":return\"shopping-bag\";case\"Healthcare\":return\"medkit\";case\"Travel\":return\"plane\";case\"Shopping\":return\"shopping-cart\";case\"Personal Care\":return\"user-md\";case\"Investment\":return\"get-pocket\";case\"Gifts & Donations\":return\"gift\";case\"Bills & Utilities\":return\"columns\";case\"Others\":return\"circle-o\";default:return\"bars\";}};export var getCatColor=function getCatColor(category){switch(category){case\"Food\":return\"#FF965D\";case\"Automobile\":return\"#FFCC78\";case\"Entertainment\":return\"#A08E78\";case\"Clothing\":return\"#8DA685\";case\"Healthcare\":return\"#00A3EA\";case\"Travel\":return\"#3EA75E\";case\"Shopping\":return\"#16B498\";case\"Personal Care\":return\"#FF1945\";case\"Investment\":return\"#FF5473\";case\"Gifts & Donations\":return\"#927959\";case\"Bills & Utilities\":return\"#7E0332\";case\"Others\":return\"#872AEF\";default:return\"#fff\";}};export var setCurrencyIcon=function setCurrencyIcon(currency){switch(currency){case\"Indian Rupees\":return\"fa-rupee\";case\"US Dollars\":return\"fa-dollar\";case\"Pounds\":return\"fa-gbp\";case\"Yen\":return\"fa-yen\";case\"Euro\":return\"fa-euro\";default:return\"fa-rupee\";}};export var filterExpensesByCriteria=function filterExpensesByCriteria(startDate,endDate,category,expenseFrom,expenseTo,thisUsersExpenses){var start=new Date(startDate);var end=new Date(endDate);var currentDate=new Date(start);var between=[];var filteredExpenses=[];while(currentDate<=end){between.push(moment(new Date(currentDate)).format(\"MM/DD/YYYY\"));currentDate.setDate(currentDate.getDate()+1);}between.forEach(function(elem){return thisUsersExpenses.filter(function(el){return elem===el.value.date?filteredExpenses.push(el):\"\";});});filteredExpenses=filteredExpenses.filter(function(elem){return elem.value.category===category;}).filter(function(elem){return Number(elem.value.expense)>=Number(expenseFrom)&&Number(elem.value.expense)<=Number(expenseTo);});return filteredExpenses;};// Total loan amount that you need to pay or get paid\nexport var loanTakenOrGivenAmt=function loanTakenOrGivenAmt(thisUsersLoans,takenOrGiven){if(thisUsersLoans.length&&takenOrGiven){var loans=thisUsersLoans.filter(function(elem){return elem.value.loanType===takenOrGiven&&elem.value.status===\"Pending\";});return loans.length?loans.map(function(elem){return Number(elem.value.amount);}).reduce(function(prev,cur){return prev+cur;}):0;}else{return 0;}};// get all the dates of a particular week\n/*const today = moment();\r\n        const sevenDaysBefore = moment().subtract(7, 'days');\r\n        console.log(today)\r\n        console.log(sevenDaysBefore)*/ // get all the dates of a particular monthly\nexport var getAllTheDatesInAMonth=function getAllTheDatesInAMonth(selectedYear,selectedMonth){//var date = new Date(), y = date.getFullYear(), m = date.getMonth();\nvar firstDay=new Date(Number(selectedYear),Number(selectedMonth),1);var lastDay=new Date(Number(selectedYear),Number(selectedMonth)+1,0);firstDay=moment(firstDay).format(\"MM/DD/YYYY\");lastDay=moment(lastDay).format(\"MM/DD/YYYY\");// Returns an array of dates between the two dates\nvar getDates=function getDates(startDate,endDate){var dates=[],currentDate=startDate,addDays=function addDays(days){var date=new Date(this.valueOf());date.setDate(date.getDate()+days);return date;};while(currentDate<=endDate){dates.push(currentDate);currentDate=addDays.call(currentDate,1);}return dates.map(function(date){return moment(date).format(\"MM/DD/YYYY\");});};// Usage\nvar dates=getDates(new Date(firstDay),new Date(lastDay));//var datesinSelectedMonth = [];\n//dates.map(function (date) {\n//datesinSelectedMonth.push(moment(date).format(\"MM/DD/YYYY\"));\n//});\nreturn dates;};// previous 3 and next 3 years\nexport var yearsGenereator=function yearsGenereator(){var defaultYears=[];var dateVal=new Date();var currentYear=dateVal.getFullYear();var cutOffYears=4;// using 5 years as cutoff as per reports cutoffyears to keep inline\nfor(var i=currentYear-cutOffYears;i<=currentYear+cutOffYears;i++){defaultYears.push(i);}return defaultYears;};","map":{"version":3,"sources":["D:/React Projects/my-app/src/Util.js"],"names":["moment","eachExpense","expenses","Object","keys","map","key","value","sort","a","b","Date","date","currentUsersExpenses","currentUser","filter","elem","user_id","uid","expensesinMonthAndYear","selectedMonth","selectedYear","getFullYear","toString","getMonth","expensesinSelectedYear","expensesInDate","ExpensesInDate_","type","IncomeInDate_","currentMonthExpenses","expensesinCurrentYear","expensesinMonth","MonthNumber","expensesToday","getDate","expensesThisWeek","week","year","totalExpense","length","totalMoney","Number","parseFloat","price","reduce","prev","cur","mostSpentDay","monday","tuesday","wednesday","thursday","friday","saturday","sunday","day","mostDaysObj","sortable","push","sortedCategories","leastSpentDay","totalExpensesInEachMonthOfThisYear","expensesOfAllMonthsInThisYear","i","String","calculateTotalForAllCategories","categories","categoryTotal","Food","Automobile","Entertainment","Clothing","Healthcare","Travel","Shopping","Investment","Others","totalForACategory","category","temp","el","expense","console","log","mostSpentCategory","categoryTotals","cat","categoryColors","categoryName","name","borderBottom","borderLeft","categoryIcon","getCatColor","setCurrencyIcon","currency","filterExpensesByCriteria","startDate","endDate","expenseFrom","expenseTo","thisUsersExpenses","start","end","currentDate","between","filteredExpenses","format","setDate","forEach","loanTakenOrGivenAmt","thisUsersLoans","takenOrGiven","loans","loanType","status","amount","getAllTheDatesInAMonth","firstDay","lastDay","getDates","dates","addDays","days","valueOf","call","yearsGenereator","defaultYears","dateVal","currentYear","cutOffYears"],"mappings":"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","sourcesContent":["import moment from \"moment\";\r\n\r\nexport const eachExpense = expenses => {\r\n    return Object.keys(expenses)\r\n        .map(function (key) {\r\n            return { key: key, value: expenses[key] };\r\n        })\r\n        .sort(function (a, b) {\r\n            // Turn your strings into dates, and then subtract them\r\n            // to get a value that is either negative, positive, or zero.\r\n            return new Date(b.value.date) - new Date(a.value.date);\r\n        });\r\n};\r\n\r\nexport const currentUsersExpenses = (eachExpense, currentUser) => {\r\n    return eachExpense.filter(elem => elem.value.user_id === currentUser.uid);\r\n};\r\n\r\n// expenses in selected month and year\r\nexport const expensesinMonthAndYear = (eachExpense, currentUser, selectedMonth, selectedYear) => {\r\n    return eachExpense\r\n        .filter(elem => elem.value.uid === currentUser.uid)\r\n        .filter(elem => new Date(elem.value.date).getFullYear().toString() === selectedYear.toString())\r\n        .filter(elem => new Date(elem.value.date).getMonth().toString() === selectedMonth);\r\n};\r\n\r\n// expenses in selected year\r\nexport const expensesinSelectedYear = (eachExpense, currentUser, selectedYear) => {\r\n    return eachExpense\r\n        .filter(elem => elem.value.uid === currentUser.uid)\r\n        .filter(elem => new Date(elem.value.date).getFullYear().toString() === selectedYear.toString());\r\n};\r\n\r\n// expenses in a selected date\r\nexport const expensesInDate = (eachExpense, currentUser, date) => {\r\n    return eachExpense.filter(elem => elem.value.user_id === currentUser.uid && elem.value.date === date);\r\n};\r\n\r\nexport const ExpensesInDate_ = (eachExpense, currentUser, date) => {\r\n    return eachExpense.filter(elem => elem.value.user_id === currentUser.uid && elem.value.date === date && elem.value.type ==='expense');\r\n};\r\n\r\nexport const IncomeInDate_ = (eachExpense, currentUser, date) => {\r\n    return eachExpense.filter(elem => elem.value.user_id === currentUser.uid && elem.value.date === date && elem.value.type ==='income');\r\n};\r\n\r\n\r\n// expenses in current month\r\nexport const currentMonthExpenses = (eachExpense, currentUser) => {\r\n    return eachExpense.filter(\r\n        elem =>\r\n            elem.value.uid === currentUser.uid &&\r\n            new Date(elem.value.date).getMonth() === new Date().getMonth() &&\r\n            new Date(elem.value.date).getFullYear() === new Date().getFullYear()\r\n    );\r\n};\r\n\r\n// expense in current year\r\nexport const expensesinCurrentYear = (eachExpense, currentUser) => {\r\n    return eachExpense\r\n        .filter(elem => elem.value.uid === currentUser.uid)\r\n        .filter(elem => new Date(elem.value.date).getFullYear().toString() === new Date().getFullYear().toString());\r\n};\r\n\r\n// expenses in a particular month of this year\r\nexport const expensesinMonth = (eachExpense, currentUser, MonthNumber, selectedYear) => {\r\n    return eachExpense\r\n        .filter(elem => elem.value.uid === currentUser.uid)\r\n        .filter(elem => new Date(elem.value.date).getFullYear().toString() === selectedYear.toString())\r\n        .filter(elem => new Date(elem.value.date).getMonth().toString() === MonthNumber);\r\n};\r\n\r\n// expense today\r\nexport const expensesToday = (eachExpense, currentUser) => {\r\n    return eachExpense\r\n        .filter(\r\n            elem => elem.value.user_id === currentUser.uid && new Date(elem.value.date).getMonth() === new Date().getMonth()\r\n        )\r\n        .filter(elem => new Date(elem.value.date).getDate() === new Date().getDate());\r\n};\r\n\r\n// expense this week\r\nexport const expensesThisWeek = (eachExpense, currentUser) => {\r\n    return eachExpense.filter(\r\n        elem =>\r\n            elem.value.uid === currentUser.uid &&\r\n            moment(elem.value.date, \"MM/DD/YYYY\").week() === moment(moment(new Date()), \"MM/DD/YYYY\").week() &&\r\n            moment(elem.value.date, \"MM/DD/YYYY\").year() === moment(moment(new Date()), \"MM/DD/YYYY\").year()\r\n    );\r\n};\r\n\r\n// expenses Total\r\nexport const totalExpense = expenses => {\r\n    if (expenses.length) {\r\n        let totalMoney = 0;\r\n        return (expenses.map(elem => Number(\r\n            elem.value.type === 'income' ? \r\n                    parseFloat(elem.value.price) + totalMoney\r\n                    : totalMoney - parseFloat(elem.value.price)\r\n            )).reduce((prev, cur) => prev + cur)\r\n        \r\n        );\r\n    } else {\r\n        return 0;\r\n    }\r\n};\r\n\r\n// most spend day\r\nexport const mostSpentDay = expenses => {\r\n    let monday = 0;\r\n    let tuesday = 0;\r\n    let wednesday = 0;\r\n    let thursday = 0;\r\n    let friday = 0;\r\n    let saturday = 0;\r\n    let sunday = 0;\r\n\r\n    expenses.map(elem => {\r\n        switch (elem.value.day.toString()) {\r\n            case \"0\":\r\n                sunday = sunday + 1;\r\n                return \"\";\r\n            case \"1\":\r\n                monday = monday + 1;\r\n                return \"\";\r\n            case \"2\":\r\n                tuesday = tuesday + 1;\r\n                return \"\";\r\n            case \"3\":\r\n                wednesday = wednesday + 1;\r\n                return \"\";\r\n            case \"4\":\r\n                thursday = thursday + 1;\r\n                return \"\";\r\n            case \"5\":\r\n                friday = friday + 1;\r\n                return \"\";\r\n            case \"6\":\r\n                saturday = saturday + 1;\r\n                return \"\";\r\n            default:\r\n                return \"\";\r\n        }\r\n    });\r\n\r\n    let mostDaysObj = {\r\n        sunday: sunday,\r\n        monday: monday,\r\n        tuesday: tuesday,\r\n        wednesday: wednesday,\r\n        thursday: thursday,\r\n        friday: friday,\r\n        saturday: saturday\r\n    };\r\n\r\n    var sortable = [];\r\n    for (var day in mostDaysObj) {\r\n        sortable.push([day, mostDaysObj[day]]);\r\n    }\r\n\r\n    let sortedCategories = sortable.sort(function (a, b) {\r\n        return b[1] - a[1];\r\n    });\r\n\r\n    return {\r\n        mostSpentDay: expenses.length ? sortedCategories[0][0] : \"-\",\r\n        leastSpentDay: expenses.length ? sortedCategories[6][0] : \"-\"\r\n    };\r\n};\r\n\r\n// Total expenses in Each month\r\nexport const totalExpensesInEachMonthOfThisYear = (expenses, eachExpense, currentUser, selectedYear) => {\r\n    let expensesOfAllMonthsInThisYear = [];\r\n\r\n    for (var i = 0; i <= 11; i++) {\r\n        expensesOfAllMonthsInThisYear.push(\r\n            totalExpense(expensesinMonth(eachExpense, currentUser, String(i), selectedYear))\r\n        );\r\n    }\r\n    return expensesOfAllMonthsInThisYear;\r\n};\r\n\r\n// Total for each category\r\nexport const calculateTotalForAllCategories = expenses => {\r\n    const categories = [\r\n        \"Food\",\r\n        \"Automobile\",\r\n        \"Entertainment\",\r\n        \"Clothing\",\r\n        \"Healthcare\",\r\n        \"Travel\",\r\n        \"Shopping\",\r\n        \"Personal Care\",\r\n        \"Investment\",\r\n        \"Gifts & Donations\",\r\n        \"Bills & Utilities\",\r\n        \"Others\"\r\n    ];\r\n\r\n    let categoryTotal = {\r\n        Food: 0,\r\n        Automobile: 0,\r\n        Entertainment: 0,\r\n        Clothing: 0,\r\n        Healthcare: 0,\r\n        Travel: 0,\r\n        Shopping: 0,\r\n        \"Personal Care\": 0,\r\n        Investment: 0,\r\n        \"Gifts & Donations\": 0,\r\n        \"Bills & Utilities\": 0,\r\n        Others: 0\r\n    };\r\n\r\n    const totalForACategory = function (expenses, category) {\r\n        let temp = expenses.filter(elem => elem.value.category === category).map(el => Number(el.value.expense));\r\n\r\n        var category = category;\r\n        if (temp.length) {\r\n            return (categoryTotal[category] = temp.reduce((prev, cur) => prev + cur));\r\n        } else {\r\n            return (categoryTotal[category] = 0);\r\n        }\r\n    };\r\n\r\n    categories.map(category => totalForACategory(expenses, category));\r\n\r\n    console.log(\"category total\", categoryTotal)\r\n\r\n    return categoryTotal;\r\n};\r\n\r\n// most spent on category\r\nexport const mostSpentCategory = expenses => {\r\n    let categoryTotals = calculateTotalForAllCategories(expenses);\r\n\r\n    var sortable = [];\r\n    for (var cat in categoryTotals) {\r\n        sortable.push([cat, categoryTotals[cat]]);\r\n    }\r\n\r\n    let sortedCategories = sortable.sort(function (a, b) {\r\n        return b[1] - a[1];\r\n    });\r\n\r\n    return expenses.length ? sortedCategories[0][0] : \"-\";\r\n};\r\n\r\n// all categories\r\nexport const categories = [\r\n    \"Food\",\r\n    \"Automobile\",\r\n    \"Entertainment\",\r\n    \"Clothing\",\r\n    \"Healthcare\",\r\n    \"Travel\",\r\n    \"Shopping\",\r\n    \"Personal Care\",\r\n    \"Investment\",\r\n    \"Gifts & Donations\",\r\n    \"Bills & Utilities\",\r\n    \"Others\"\r\n];\r\n\r\n// colors for each category\r\nexport const categoryColors = [\r\n    \"#FF965D\",\r\n    \"#FFCC78\",\r\n    \"#A08E78\",\r\n    \"#8DA685\",\r\n    \"#00A3EA\",\r\n    \"#3EA75E\",\r\n    \"#16B498\",\r\n    \"#FF1945\",\r\n    \"#FF5473\",\r\n    \"#927959\",\r\n    \"#7E0332\",\r\n    \"#872AEF\"\r\n];\r\n\r\n// retrun border color for each category - daily and monthly view\r\n/*\r\n@method : categoryName\r\n@params : \r\n    cat: category name\r\n    name: name of the component (Basically we're retrieving styles based on category here)\r\n@return : styles based on category for a particular component based on name \r\n*/\r\nexport const categoryName = (cat, name) => {\r\n    switch (cat) {\r\n        case \"Food\":\r\n            return name === \"card\" ? { borderBottom: \"5px solid #FF965D\" } : { borderLeft: \"10px solid #FF965D\" };\r\n        case \"Automobile\":\r\n            return name === \"card\" ? { borderBottom: \"5px solid #FFCC78\" } : { borderLeft: \"10px solid #FFCC78\" };\r\n        case \"Entertainment\":\r\n            return name === \"card\" ? { borderBottom: \"5px solid #A08E78\" } : { borderLeft: \"10px solid #A08E78\" };\r\n        case \"Clothing\":\r\n            return name === \"card\" ? { borderBottom: \"5px solid #8DA685\" } : { borderLeft: \"10px solid #8DA685\" };\r\n        case \"Healthcare\":\r\n            return name === \"card\" ? { borderBottom: \"5px solid #00A3EA\" } : { borderLeft: \"10px solid #00A3EA\" };\r\n        case \"Travel\":\r\n            return name === \"card\" ? { borderBottom: \"5px solid #3EA75E\" } : { borderLeft: \"10px solid #3EA75E\" };\r\n        case \"Shopping\":\r\n            return name === \"card\" ? { borderBottom: \"5px solid #16B498\" } : { borderLeft: \"10px solid #16B498\" };\r\n        case \"Personal Care\":\r\n            return name === \"card\" ? { borderBottom: \"5px solid #FF1945\" } : { borderLeft: \"10px solid #FF1945\" };\r\n        case \"Investment\":\r\n            return name === \"card\" ? { borderBottom: \"5px solid #FF5473\" } : { borderLeft: \"10px solid #FF5473\" };\r\n        case \"Gifts & Donations\":\r\n            return name === \"card\" ? { borderBottom: \"5px solid #927959\" } : { borderLeft: \"10px solid #927959\" };\r\n        case \"Bills & Utilities\":\r\n            return name === \"card\" ? { borderBottom: \"5px solid #7E0332\" } : { borderLeft: \"10px solid #7E0332\" };\r\n        case \"Others\":\r\n            return name === \"card\" ? { borderBottom: \"5px solid #872AEF\" } : { borderLeft: \"10px solid #872AEF\" };\r\n        default:\r\n            return { borderBottom: \"5px solid orange\" };\r\n    }\r\n};\r\n\r\nexport const categoryIcon = category => {\r\n    switch (category) {\r\n        case \"Food\":\r\n            return \"cutlery\";\r\n        case \"Automobile\":\r\n            return \"motorcycle\";\r\n        case \"Entertainment\":\r\n            return \"film\";\r\n        case \"Clothing\":\r\n            return \"shopping-bag\";\r\n        case \"Healthcare\":\r\n            return \"medkit\";\r\n        case \"Travel\":\r\n            return \"plane\";\r\n        case \"Shopping\":\r\n            return \"shopping-cart\";\r\n        case \"Personal Care\":\r\n            return \"user-md\";\r\n        case \"Investment\":\r\n            return \"get-pocket\";\r\n        case \"Gifts & Donations\":\r\n            return \"gift\";\r\n        case \"Bills & Utilities\":\r\n            return \"columns\";\r\n        case \"Others\":\r\n            return \"circle-o\";\r\n        default:\r\n            return \"bars\";\r\n    }\r\n};\r\n\r\nexport const getCatColor = category => {\r\n    switch (category) {\r\n        case \"Food\":\r\n            return \"#FF965D\";\r\n        case \"Automobile\":\r\n            return \"#FFCC78\";\r\n        case \"Entertainment\":\r\n            return \"#A08E78\";\r\n        case \"Clothing\":\r\n            return \"#8DA685\";\r\n        case \"Healthcare\":\r\n            return \"#00A3EA\";\r\n        case \"Travel\":\r\n            return \"#3EA75E\";\r\n        case \"Shopping\":\r\n            return \"#16B498\";\r\n        case \"Personal Care\":\r\n            return \"#FF1945\";\r\n        case \"Investment\":\r\n            return \"#FF5473\";\r\n        case \"Gifts & Donations\":\r\n            return \"#927959\";\r\n        case \"Bills & Utilities\":\r\n            return \"#7E0332\";\r\n        case \"Others\":\r\n            return \"#872AEF\";\r\n        default:\r\n            return \"#fff\";\r\n    }\r\n};\r\n\r\nexport const setCurrencyIcon = currency => {\r\n    switch (currency) {\r\n        case \"Indian Rupees\":\r\n            return \"fa-rupee\";\r\n        case \"US Dollars\":\r\n            return \"fa-dollar\";\r\n        case \"Pounds\":\r\n            return \"fa-gbp\";\r\n        case \"Yen\":\r\n            return \"fa-yen\";\r\n        case \"Euro\":\r\n            return \"fa-euro\";\r\n        default:\r\n            return \"fa-rupee\";\r\n    }\r\n};\r\n\r\nexport const filterExpensesByCriteria = (startDate, endDate, category, expenseFrom, expenseTo, thisUsersExpenses) => {\r\n    var start = new Date(startDate);\r\n    var end = new Date(endDate);\r\n    var currentDate = new Date(start);\r\n    var between = [];\r\n    var filteredExpenses = [];\r\n\r\n    while (currentDate <= end) {\r\n        between.push(moment(new Date(currentDate)).format(\"MM/DD/YYYY\"));\r\n        currentDate.setDate(currentDate.getDate() + 1);\r\n    }\r\n\r\n    between.forEach(function (elem) {\r\n        return thisUsersExpenses.filter(function (el) {\r\n            return elem === el.value.date ? filteredExpenses.push(el) : \"\";\r\n        });\r\n    });\r\n\r\n    filteredExpenses = filteredExpenses\r\n        .filter(elem => {\r\n            return elem.value.category === category;\r\n        })\r\n        .filter(elem => {\r\n            return Number(elem.value.expense) >= Number(expenseFrom) && Number(elem.value.expense) <= Number(expenseTo);\r\n        });\r\n\r\n    return filteredExpenses;\r\n};\r\n\r\n// Total loan amount that you need to pay or get paid\r\nexport const loanTakenOrGivenAmt = (thisUsersLoans, takenOrGiven) => {\r\n    if (thisUsersLoans.length && takenOrGiven) {\r\n        let loans = thisUsersLoans.filter(\r\n            elem => elem.value.loanType === takenOrGiven && elem.value.status === \"Pending\"\r\n        );\r\n\r\n        return loans.length ? loans.map(elem => Number(elem.value.amount)).reduce((prev, cur) => prev + cur) : 0;\r\n    } else {\r\n        return 0;\r\n    }\r\n};\r\n\r\n// get all the dates of a particular week\r\n/*const today = moment();\r\n        const sevenDaysBefore = moment().subtract(7, 'days');\r\n        console.log(today)\r\n        console.log(sevenDaysBefore)*/\r\n\r\n\r\n// get all the dates of a particular monthly\r\n\r\nexport const getAllTheDatesInAMonth = (selectedYear, selectedMonth) => {\r\n    //var date = new Date(), y = date.getFullYear(), m = date.getMonth();\r\n    var firstDay = new Date(Number(selectedYear), Number(selectedMonth), 1);\r\n    var lastDay = new Date(Number(selectedYear), Number(selectedMonth) + 1, 0);\r\n\r\n    firstDay = moment(firstDay).format(\"MM/DD/YYYY\");\r\n    lastDay = moment(lastDay).format(\"MM/DD/YYYY\");\r\n\r\n    // Returns an array of dates between the two dates\r\n    var getDates = function (startDate, endDate) {\r\n        var dates = [],\r\n            currentDate = startDate,\r\n            addDays = function (days) {\r\n                var date = new Date(this.valueOf());\r\n                date.setDate(date.getDate() + days);\r\n                return date;\r\n            };\r\n        while (currentDate <= endDate) {\r\n            dates.push(currentDate);\r\n            currentDate = addDays.call(currentDate, 1);\r\n        }\r\n        return dates.map(date => moment(date).format(\"MM/DD/YYYY\"));\r\n    };\r\n\r\n    // Usage\r\n    var dates = getDates(new Date(firstDay), new Date(lastDay));\r\n    //var datesinSelectedMonth = [];\r\n    //dates.map(function (date) {\r\n    //datesinSelectedMonth.push(moment(date).format(\"MM/DD/YYYY\"));\r\n    //});\r\n\r\n    return dates;\r\n};\r\n\r\n// previous 3 and next 3 years\r\nexport const yearsGenereator = () => {\r\n    var defaultYears = [];\r\n    var dateVal = new Date();\r\n    var currentYear = dateVal.getFullYear();\r\n    var cutOffYears = 4; // using 5 years as cutoff as per reports cutoffyears to keep inline\r\n    for (var i = currentYear - cutOffYears; i <= currentYear + cutOffYears; i++) {\r\n        defaultYears.push(i);\r\n    }\r\n\r\n    return defaultYears;\r\n};\r\n"]},"metadata":{},"sourceType":"module"}