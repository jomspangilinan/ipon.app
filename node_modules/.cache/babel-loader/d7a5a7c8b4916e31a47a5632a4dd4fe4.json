{"ast":null,"code":"var _jsxFileName = \"D:\\\\React Projects\\\\my-app\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport Main from './Main';\nimport React, { useEffect, useState } from \"react\";\nimport { useAuthState } from \"react-firebase-hooks/auth\";\nimport { useHistory } from \"react-router\";\nimport { auth, db } from \"./firebase\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [user, loading, error] = useAuthState(auth);\n  const [name, setName] = useState(\"\");\n  const history = useHistory();\n  useEffect(() => {\n    const fetchUserName = async () => {\n      try {\n        const query = await db.collection(\"users\").where(\"uid\", \"==\", user === null || user === void 0 ? void 0 : user.uid).get();\n        const data = await query.docs[0].data();\n        setName(data.name);\n      } catch (err) {\n        console.error(err);\n        alert(\"An error occured while fetching user data\");\n      }\n    };\n\n    if (loading) return;\n    if (!user) return history.replace(\"/\");\n    fetchUserName();\n  }, [user, loading, history]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: user ? /*#__PURE__*/_jsxDEV(Main, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: history.replace(\"/\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"UIWLq39EqjeE6/5d1SCi+Vgcj90=\", false, function () {\n  return [useAuthState, useHistory];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/React Projects/my-app/src/App.js"],"names":["Main","React","useEffect","useState","useAuthState","useHistory","auth","db","App","user","loading","error","name","setName","history","fetchUserName","query","collection","where","uid","get","data","docs","err","console","alert","replace"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,QAAjB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,YAAT,QAA6B,2BAA7B;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,SAASC,IAAT,EAAeC,EAAf,QAAyB,YAAzB;;;AAGA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,IAAD,EAAOC,OAAP,EAAgBC,KAAhB,IAAyBP,YAAY,CAACE,IAAD,CAA3C;AACA,QAAM,CAACM,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAMW,OAAO,GAAGT,UAAU,EAA1B;AAEAH,EAAAA,SAAS,CAAC,MAAM;AAEd,UAAMa,aAAa,GAAG,YAAY;AAChC,UAAI;AACF,cAAMC,KAAK,GAAG,MAAMT,EAAE,CACnBU,UADiB,CACN,OADM,EAEjBC,KAFiB,CAEX,KAFW,EAEJ,IAFI,EAEET,IAFF,aAEEA,IAFF,uBAEEA,IAAI,CAAEU,GAFR,EAGjBC,GAHiB,EAApB;AAIA,cAAMC,IAAI,GAAG,MAAML,KAAK,CAACM,IAAN,CAAW,CAAX,EAAcD,IAAd,EAAnB;AACAR,QAAAA,OAAO,CAACQ,IAAI,CAACT,IAAN,CAAP;AACD,OAPD,CAOE,OAAOW,GAAP,EAAY;AACZC,QAAAA,OAAO,CAACb,KAAR,CAAcY,GAAd;AACAE,QAAAA,KAAK,CAAC,2CAAD,CAAL;AACD;AACF,KAZD;;AAaA,QAAIf,OAAJ,EAAa;AACb,QAAI,CAACD,IAAL,EAAW,OAAOK,OAAO,CAACY,OAAR,CAAgB,GAAhB,CAAP;AAEXX,IAAAA,aAAa;AACd,GAnBQ,EAmBN,CAACN,IAAD,EAAOC,OAAP,EAAgBI,OAAhB,CAnBM,CAAT;AAoBA,sBACE;AAAA,cAEIL,IAAI,gBACA,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,YADA,gBAEA;AAAA,gBAAMK,OAAO,CAACY,OAAR,CAAgB,GAAhB;AAAN;AAAA;AAAA;AAAA;AAAA;AAJR;AAAA;AAAA;AAAA;AAAA,UADF;AASD;;GAlCQlB,G;UACwBJ,Y,EAEfC,U;;;KAHTG,G;AAoCT,eAAeA,GAAf","sourcesContent":["import Main from './Main';\nimport React, { useEffect, useState } from \"react\";\nimport { useAuthState } from \"react-firebase-hooks/auth\";\nimport { useHistory } from \"react-router\";\nimport { auth, db } from \"./firebase\";\n\n\nfunction App() {\n  const [user, loading, error] = useAuthState(auth);\n  const [name, setName] = useState(\"\");\n  const history = useHistory();\n  \n  useEffect(() => {\n    \n    const fetchUserName = async () => {\n      try {\n        const query = await db\n          .collection(\"users\")\n          .where(\"uid\", \"==\", user?.uid)\n          .get();\n        const data = await query.docs[0].data();\n        setName(data.name);\n      } catch (err) {\n        console.error(err);\n        alert(\"An error occured while fetching user data\");\n      }\n    };\n    if (loading) return;\n    if (!user) return history.replace(\"/\");\n    \n    fetchUserName();\n  }, [user, loading, history]);\n  return (\n    <div>\n      {\n        user \n          ? <Main/>\n          : <div>{history.replace(\"/\")}</div>\n      }\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}