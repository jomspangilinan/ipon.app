{"ast":null,"code":"var _jsxFileName = \"D:\\\\React Projects\\\\my-app\\\\src\\\\pages\\\\History.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component, useState, useEffect } from \"react\";\nimport { useAuthState } from \"react-firebase-hooks/auth\";\nimport { useHistory } from \"react-router\";\nimport { auth, db, app, CurrentUser } from \"../firebase\";\nimport * as utils from \"../Util\";\nimport Transaction from './Transaction';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction History() {\n  _s();\n\n  const [user, loading, error] = useAuthState(auth);\n  const [history_, setHistory_] = useState([]);\n  const history = useHistory();\n  useEffect(() => {\n    const fetchUserName = async () => {\n      try {\n        const query = await db.collection(\"users\").where(\"uid\", \"==\", user === null || user === void 0 ? void 0 : user.uid).get();\n        const data = await query.docs[0].data();\n        app.database().ref('Transactions/' + (user === null || user === void 0 ? void 0 : user.uid)).on(\"value\", data => {\n          console.log(data.val());\n\n          if (data.val() !== null) {\n            const eachExpense = utils.eachExpense(data.val());\n            const thisUsersExpenses = utils.currentUsersExpenses(eachExpense, user);\n            setHistory_(thisUsersExpenses);\n          }\n        });\n      } catch (err) {\n        console.error(err);\n        alert(\"An error occured while fetching user data\");\n      }\n    };\n\n    if (loading) return;\n    if (!user) return history.replace(\"/\");\n    fetchUserName();\n  }, [user, loading, history]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"latestTransactions\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Latest Transactions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: Object.keys(history_).map(id => /*#__PURE__*/_jsxDEV(Transaction, {\n        type: history_[id].value.type,\n        name: history_[id].value.name,\n        price: history_[id].value.price\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n}\n\n_s(History, \"L1Zu4oe0BqFMODUyo2+boUiZFt4=\", false, function () {\n  return [useAuthState, useHistory];\n});\n\n_c = History;\nexport default History;\n\nvar _c;\n\n$RefreshReg$(_c, \"History\");","map":{"version":3,"sources":["D:/React Projects/my-app/src/pages/History.js"],"names":["React","Component","useState","useEffect","useAuthState","useHistory","auth","db","app","CurrentUser","utils","Transaction","History","user","loading","error","history_","setHistory_","history","fetchUserName","query","collection","where","uid","get","data","docs","database","ref","on","console","log","val","eachExpense","thisUsersExpenses","currentUsersExpenses","err","alert","replace","Object","keys","map","id","value","type","name","price"],"mappings":"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","sourcesContent":["import React, { Component, useState, useEffect } from \"react\";\r\nimport { useAuthState } from \"react-firebase-hooks/auth\";\r\nimport { useHistory } from \"react-router\";\r\nimport { auth, db,app,CurrentUser } from \"../firebase\";\r\nimport * as utils from \"../Util\";\r\nimport Transaction from './Transaction';\r\n\r\nfunction History() {\r\n    const [user, loading, error] = useAuthState(auth);\r\n    const [history_, setHistory_] = useState([]);\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n    \r\n        const fetchUserName = async () => {\r\n          try {\r\n            const query = await db\r\n              .collection(\"users\")\r\n              .where(\"uid\", \"==\", user?.uid)\r\n              .get();\r\n            const data = await query.docs[0].data();\r\n            \r\n            app.database().ref('Transactions/' + user?.uid).on(\"value\", data => {\r\n              console.log(data.val());\r\n              if(data.val() !== null)\r\n              {\r\n              const eachExpense = utils.eachExpense(data.val());\r\n              const thisUsersExpenses = utils.currentUsersExpenses(eachExpense, user);\r\n              \r\n              setHistory_(thisUsersExpenses);\r\n              \r\n             }\r\n            });\r\n          } catch (err) {\r\n            console.error(err);\r\n            alert(\"An error occured while fetching user data\");\r\n          }\r\n        };\r\n        if (loading) return;\r\n        if (!user) return history.replace(\"/\");\r\n        \r\n        fetchUserName();\r\n      }, [user, loading,\r\n        history]);\r\n  return (\r\n        <div className=\"latestTransactions\">\r\n        <p>Latest Transactions</p>\r\n        <ul>\r\n            {\r\n                Object.keys(history_).map((id) => (\r\n                    <Transaction key={id}\r\n                        type={history_[id].value.type}\r\n                        name={history_[id].value.name}\r\n                        price={history_[id].value.price}\r\n                    />\r\n                ))\r\n            }\r\n        </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default History;"]},"metadata":{},"sourceType":"module"}