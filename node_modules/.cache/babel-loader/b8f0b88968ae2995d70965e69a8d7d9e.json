{"ast":null,"code":"// Import the functions you need from the SDKs you need\nimport { initializeApp } from \"firebase/app\";\nimport { getAnalytics } from \"firebase/analytics\"; // TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n// Your web app's Firebase configuration\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyA4HI9Pe226EHYr1EU1gt___ojPAfFd4PM\",\n  authDomain: \"smartl-11d4c.firebaseapp.com\",\n  databaseURL: \"https://smartl-11d4c-default-rtdb.asia-southeast1.firebasedatabase.app\",\n  projectId: \"smartl-11d4c\",\n  storageBucket: \"smartl-11d4c.appspot.com\",\n  messagingSenderId: \"301086926501\",\n  appId: \"1:301086926501:web:8429d75cb8a36f6a3c4f4c\",\n  measurementId: \"G-MTMFKNLM0N\"\n}; // Initialize Firebase\n\nconst app = initializeApp(firebaseConfig);\nconst analytics = getAnalytics(app);\nconst googleProvider = new firebase.auth.GoogleAuthProvider();\n\nconst signInWithGoogle = async () => {\n  try {\n    const res = await auth.signInWithPopup(googleProvider);\n    const user = res.user;\n    const query = await db.collection(\"users\").where(\"uid\", \"==\", user.uid).get();\n\n    if (query.docs.length === 0) {\n      await db.collection(\"users\").add({\n        uid: user.uid,\n        name: user.displayName,\n        authProvider: \"google\",\n        email: user.email\n      });\n    }\n  } catch (err) {\n    console.error(err);\n    alert(err.message);\n  }\n};\n\nconst signInWithEmailAndPassword = async (email, password) => {\n  try {\n    await auth.signInWithEmailAndPassword(email, password);\n  } catch (err) {\n    console.error(err);\n    alert(err.message);\n  }\n};\n\nconst registerWithEmailAndPassword = async (name, email, password) => {\n  try {\n    const res = await auth.createUserWithEmailAndPassword(email, password);\n    const user = res.user;\n    await db.collection(\"users\").add({\n      uid: user.uid,\n      name,\n      authProvider: \"local\",\n      email\n    });\n  } catch (err) {\n    console.error(err);\n    alert(err.message);\n  }\n};\n\nconst sendPasswordResetEmail = async email => {\n  try {\n    await auth.sendPasswordResetEmail(email);\n    alert(\"Password reset link sent!\");\n  } catch (err) {\n    console.error(err);\n    alert(err.message);\n  }\n};\n\nconst logout = () => {\n  auth.signOut();\n};","map":{"version":3,"sources":["D:/React Projects/my-app/src/firebase/fire.js"],"names":["initializeApp","getAnalytics","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","app","analytics","googleProvider","firebase","auth","GoogleAuthProvider","signInWithGoogle","res","signInWithPopup","user","query","db","collection","where","uid","get","docs","length","add","name","displayName","authProvider","email","err","console","error","alert","message","signInWithEmailAndPassword","password","registerWithEmailAndPassword","createUserWithEmailAndPassword","sendPasswordResetEmail","logout","signOut"],"mappings":"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","sourcesContent":["// Import the functions you need from the SDKs you need\r\nimport { initializeApp } from \"firebase/app\";\r\nimport { getAnalytics } from \"firebase/analytics\";\r\n// TODO: Add SDKs for Firebase products that you want to use\r\n// https://firebase.google.com/docs/web/setup#available-libraries\r\n\r\n// Your web app's Firebase configuration\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyA4HI9Pe226EHYr1EU1gt___ojPAfFd4PM\",\r\n  authDomain: \"smartl-11d4c.firebaseapp.com\",\r\n  databaseURL: \"https://smartl-11d4c-default-rtdb.asia-southeast1.firebasedatabase.app\",\r\n  projectId: \"smartl-11d4c\",\r\n  storageBucket: \"smartl-11d4c.appspot.com\",\r\n  messagingSenderId: \"301086926501\",\r\n  appId: \"1:301086926501:web:8429d75cb8a36f6a3c4f4c\",\r\n  measurementId: \"G-MTMFKNLM0N\"\r\n};\r\n\r\n// Initialize Firebase\r\nconst app = initializeApp(firebaseConfig);\r\nconst analytics = getAnalytics(app);\r\n\r\nconst googleProvider = new firebase.auth.GoogleAuthProvider();\r\n\r\nconst signInWithGoogle = async () => {\r\n  try {\r\n    const res = await auth.signInWithPopup(googleProvider);\r\n    const user = res.user;\r\n    const query = await db\r\n      .collection(\"users\")\r\n      .where(\"uid\", \"==\", user.uid)\r\n      .get();\r\n    if (query.docs.length === 0) {\r\n      await db.collection(\"users\").add({\r\n        uid: user.uid,\r\n        name: user.displayName,\r\n        authProvider: \"google\",\r\n        email: user.email,\r\n      });\r\n    }\r\n  } catch (err) {\r\n    console.error(err);\r\n    alert(err.message);\r\n  }\r\n};\r\n\r\n\r\nconst signInWithEmailAndPassword = async (email, password) => {\r\n  try {\r\n    await auth.signInWithEmailAndPassword(email, password);\r\n  } catch (err) {\r\n    console.error(err);\r\n    alert(err.message);\r\n  }\r\n};\r\n\r\nconst registerWithEmailAndPassword = async (name, email, password) => {\r\n  try {\r\n    const res = await auth.createUserWithEmailAndPassword(email, password);\r\n    const user = res.user;\r\n    await db.collection(\"users\").add({\r\n      uid: user.uid,\r\n      name,\r\n      authProvider: \"local\",\r\n      email,\r\n    });\r\n  } catch (err) {\r\n    console.error(err);\r\n    alert(err.message);\r\n  }\r\n};\r\n\r\nconst sendPasswordResetEmail = async (email) => {\r\n  try {\r\n    await auth.sendPasswordResetEmail(email);\r\n    alert(\"Password reset link sent!\");\r\n  } catch (err) {\r\n    console.error(err);\r\n    alert(err.message);\r\n  }\r\n};\r\n\r\nconst logout = () => {\r\n  auth.signOut();\r\n};"]},"metadata":{},"sourceType":"module"}