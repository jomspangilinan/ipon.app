{"ast":null,"code":"var _jsxFileName = \"D:\\\\React Projects\\\\my-app\\\\src\\\\pages\\\\History.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component, useState, useEffect } from \"react\";\nimport { useAuthState } from \"react-firebase-hooks/auth\";\nimport { useHistory } from \"react-router\";\nimport { auth, db, app, CurrentUser } from \"../firebase\";\nimport * as utils from \"../Util\";\nimport Transaction from './Transaction';\nimport { DataGrid } from \"@mui/x-data-grid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction History() {\n  _s();\n\n  const [user, loading, error] = useAuthState(auth);\n  const [history_, setHistory_] = useState([]);\n  const history = useHistory();\n  const columns = [{\n    field: 'id',\n    headerName: 'ID',\n    width: 70\n  }, {\n    field: 'name',\n    headerName: 'Transaction Name',\n    width: 200\n  }, {\n    field: 'price',\n    headerName: 'Price',\n    width: 150\n  }, {\n    field: 'date',\n    headerName: 'Date',\n    width: 200\n  }, {\n    field: 'type',\n    headerName: 'Income',\n    width: 150\n  }];\n  const rows = [{\n    id: 1,\n    lastName: 'Snow',\n    firstName: 'Jon',\n    age: 35\n  }, {\n    id: 2,\n    lastName: 'Lannister',\n    firstName: 'Cersei',\n    age: 42\n  }, {\n    id: 3,\n    lastName: 'Lannister',\n    firstName: 'Jaime',\n    age: 45\n  }, {\n    id: 4,\n    lastName: 'Stark',\n    firstName: 'Arya',\n    age: 16\n  }, {\n    id: 5,\n    lastName: 'Targaryen',\n    firstName: 'Daenerys',\n    age: null\n  }, {\n    id: 6,\n    lastName: 'Melisandre',\n    firstName: null,\n    age: 150\n  }, {\n    id: 7,\n    lastName: 'Clifford',\n    firstName: 'Ferrara',\n    age: 44\n  }, {\n    id: 8,\n    lastName: 'Frances',\n    firstName: 'Rossini',\n    age: 36\n  }, {\n    id: 9,\n    lastName: 'Roxie',\n    firstName: 'Harvey',\n    age: 65\n  }];\n  useEffect(() => {\n    const fetchUserName = async () => {\n      try {\n        const query = await db.collection(\"users\").where(\"uid\", \"==\", user === null || user === void 0 ? void 0 : user.uid).get();\n        const data = await query.docs[0].data();\n        app.database().ref('Transactions/' + (user === null || user === void 0 ? void 0 : user.uid)).on(\"value\", data => {\n          console.log(data.val());\n\n          if (data.val() !== null) {\n            const eachExpense = utils.eachExpense(data.val());\n            const thisUsersExpenses = utils.currentUsersExpenses(eachExpense, user);\n            console.log(thisUsersExpenses);\n            setHistory_(thisUsersExpenses);\n          }\n        });\n      } catch (err) {\n        console.error(err);\n        alert(\"An error occured while fetching user data\");\n      }\n    };\n\n    if (loading) return;\n    if (!user) return history.replace(\"/\");\n    fetchUserName();\n  }, [user, loading, history]);\n  return (\n    /*#__PURE__*/\n    //     <div className=\"latestTransactions\">\n    //     <p>Latest Transactions</p>\n    //     <ul>\n    //         {\n    //             Object.keys(history_).map((id) => (\n    //                 <Transaction key={id}\n    //                     type={history_[id].value.type}\n    //                     name={history_[id].value.name}\n    //                     price={history_[id].value.price}\n    //                 />\n    //             ))\n    //         }\n    //     </ul>\n    // </div>\n    _jsxDEV(\"div\", {\n      style: {\n        height: 400,\n        width: '100%'\n      },\n      children: Object.keys(history_).map(id => console.log([history_[id].value]))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 5\n    }, this)\n  );\n}\n\n_s(History, \"L1Zu4oe0BqFMODUyo2+boUiZFt4=\", false, function () {\n  return [useAuthState, useHistory];\n});\n\n_c = History;\nexport default History;\n\nvar _c;\n\n$RefreshReg$(_c, \"History\");","map":{"version":3,"sources":["D:/React Projects/my-app/src/pages/History.js"],"names":["React","Component","useState","useEffect","useAuthState","useHistory","auth","db","app","CurrentUser","utils","Transaction","DataGrid","History","user","loading","error","history_","setHistory_","history","columns","field","headerName","width","rows","id","lastName","firstName","age","fetchUserName","query","collection","where","uid","get","data","docs","database","ref","on","console","log","val","eachExpense","thisUsersExpenses","currentUsersExpenses","err","alert","replace","height","Object","keys","map","value"],"mappings":"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","sourcesContent":["import React, { Component, useState, useEffect } from \"react\";\r\nimport { useAuthState } from \"react-firebase-hooks/auth\";\r\nimport { useHistory } from \"react-router\";\r\nimport { auth, db,app,CurrentUser } from \"../firebase\";\r\nimport * as utils from \"../Util\";\r\nimport Transaction from './Transaction';\r\nimport { DataGrid } from \"@mui/x-data-grid\";\r\n\r\n\r\nfunction History() {\r\n    const [user, loading, error] = useAuthState(auth);\r\n    const [history_, setHistory_] = useState([]);\r\n    const history = useHistory();\r\n    const columns = [\r\n        { field: 'id', headerName: 'ID', width: 70 },\r\n        { field: 'name', headerName: 'Transaction Name', width: 200 },\r\n        { field: 'price', headerName: 'Price', width: 150 },\r\n        {\r\n          field: 'date',\r\n          headerName: 'Date',\r\n          width: 200,\r\n        },\r\n        { field: 'type', headerName: 'Income', width: 150 },\r\n      ];\r\n      \r\n      const rows = [\r\n        { id: 1, lastName: 'Snow', firstName: 'Jon', age: 35 },\r\n        { id: 2, lastName: 'Lannister', firstName: 'Cersei', age: 42 },\r\n        { id: 3, lastName: 'Lannister', firstName: 'Jaime', age: 45 },\r\n        { id: 4, lastName: 'Stark', firstName: 'Arya', age: 16 },\r\n        { id: 5, lastName: 'Targaryen', firstName: 'Daenerys', age: null },\r\n        { id: 6, lastName: 'Melisandre', firstName: null, age: 150 },\r\n        { id: 7, lastName: 'Clifford', firstName: 'Ferrara', age: 44 },\r\n        { id: 8, lastName: 'Frances', firstName: 'Rossini', age: 36 },\r\n        { id: 9, lastName: 'Roxie', firstName: 'Harvey', age: 65 },\r\n      ];\r\n    useEffect(() => {\r\n    \r\n        const fetchUserName = async () => {\r\n          try {\r\n            const query = await db\r\n              .collection(\"users\")\r\n              .where(\"uid\", \"==\", user?.uid)\r\n              .get();\r\n            const data = await query.docs[0].data();\r\n            \r\n            app.database().ref('Transactions/' + user?.uid).on(\"value\", data => {\r\n              console.log(data.val());\r\n              if(data.val() !== null)\r\n              {\r\n              const eachExpense = utils.eachExpense(data.val());\r\n              const thisUsersExpenses = utils.currentUsersExpenses(eachExpense, user);\r\n              \r\n              console.log(thisUsersExpenses);\r\n              setHistory_(thisUsersExpenses);\r\n              \r\n             }\r\n            });\r\n          } catch (err) {\r\n            console.error(err);\r\n            alert(\"An error occured while fetching user data\");\r\n          }\r\n        };\r\n        if (loading) return;\r\n        if (!user) return history.replace(\"/\");\r\n        \r\n        fetchUserName();\r\n      }, [user, loading,\r\n        history]);\r\n\r\n        \r\n  return (\r\n    //     <div className=\"latestTransactions\">\r\n    //     <p>Latest Transactions</p>\r\n    //     <ul>\r\n    //         {\r\n                \r\n    //             Object.keys(history_).map((id) => (\r\n    //                 <Transaction key={id}\r\n    //                     type={history_[id].value.type}\r\n    //                     name={history_[id].value.name}\r\n    //                     price={history_[id].value.price}\r\n    //                 />\r\n    //             ))\r\n    //         }\r\n    //     </ul>\r\n    // </div>\r\n    <div style={{ height: 400, width: '100%' }}>\r\n      \r\n      {\r\n          Object.keys(history_).map((id) => (\r\n            console.log([history_[id].value])\r\n        ))\r\n      }\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default History;"]},"metadata":{},"sourceType":"module"}